// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Graphics_ImagingInternal_ImageObjectRemover_0_H
#define WINRT_Microsoft_Graphics_ImagingInternal_ImageObjectRemover_0_H
WINRT_EXPORT namespace winrt::Microsoft::Windows::PrivateCommon
{
    struct ImageBufferResource;
}
WINRT_EXPORT namespace winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover
{
    struct IImageObjectRemoverSession;
    struct ImageObjectRemoverSessionContract;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover::IImageObjectRemoverSession>{ using type = interface_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover::IImageObjectRemoverSession> = L"Microsoft.Graphics.ImagingInternal.ImageObjectRemover.IImageObjectRemoverSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover::ImageObjectRemoverSessionContract> = L"Microsoft.Graphics.ImagingInternal.ImageObjectRemover.ImageObjectRemoverSessionContract";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover::IImageObjectRemoverSession>{ 0x91789F52,0xBE99,0x501B,{ 0x83,0x49,0xDD,0xB3,0x98,0x9D,0xEB,0x39 } }; // 91789F52-BE99-501B-8349-DDB3989DEB39
    template <> struct abi<winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover::IImageObjectRemoverSession>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall Process(void*, void*, void*, uint32_t, uint32_t) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Graphics_ImagingInternal_ImageObjectRemover_IImageObjectRemoverSession
    {
        auto Process(winrt::Microsoft::Windows::PrivateCommon::ImageBufferResource const& inputImageBufferResource, winrt::Microsoft::Windows::PrivateCommon::ImageBufferResource const& inputImageBufferMaskResource, winrt::Microsoft::Windows::PrivateCommon::ImageBufferResource const& outputImageBufferResource, uint32_t priority, uint32_t frequency) const;
    };
    template <> struct consume<winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover::IImageObjectRemoverSession>
    {
        template <typename D> using type = consume_Microsoft_Graphics_ImagingInternal_ImageObjectRemover_IImageObjectRemoverSession<D>;
    };
}
#endif
