// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_ContentModerationInternal_2_H
#define WINRT_Microsoft_Windows_AI_ContentModerationInternal_2_H
#include "winrt/impl/Microsoft.Windows.AI.ContentModerationInternal.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::ContentModerationInternal
{
    struct ImageContentAnalysisScores
    {
        uint32_t numCategoryLevels {};
        float normalContentLevel {};
        float adultHarmContentLevel {};
        float racyContentLevel {};
        float goryContentLevel {};
        float violenceContentLevel {};
    };
    inline bool operator==(ImageContentAnalysisScores const& left, ImageContentAnalysisScores const& right) noexcept
    {
        return left.numCategoryLevels == right.numCategoryLevels && left.normalContentLevel == right.normalContentLevel && left.adultHarmContentLevel == right.adultHarmContentLevel && left.racyContentLevel == right.racyContentLevel && left.goryContentLevel == right.goryContentLevel && left.violenceContentLevel == right.violenceContentLevel;
    }
    inline bool operator!=(ImageContentAnalysisScores const& left, ImageContentAnalysisScores const& right) noexcept
    {
        return !(left == right);
    }
    struct TextContentAnalysisScores
    {
        uint32_t numCategoryLevels {};
        uint32_t selfHarmContentLevel {};
        uint32_t violentContentLevel {};
        uint32_t hateContentLevel {};
        uint32_t sexualContentLevel {};
    };
    inline bool operator==(TextContentAnalysisScores const& left, TextContentAnalysisScores const& right) noexcept
    {
        return left.numCategoryLevels == right.numCategoryLevels && left.selfHarmContentLevel == right.selfHarmContentLevel && left.violentContentLevel == right.violentContentLevel && left.hateContentLevel == right.hateContentLevel && left.sexualContentLevel == right.sexualContentLevel;
    }
    inline bool operator!=(TextContentAnalysisScores const& left, TextContentAnalysisScores const& right) noexcept
    {
        return !(left == right);
    }
}
#endif
