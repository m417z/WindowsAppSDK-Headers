// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_MachineLearning_1_H
#define WINRT_Microsoft_Windows_AI_MachineLearning_1_H
#include "winrt/impl/Microsoft.Windows.AI.MachineLearning.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::MachineLearning
{
    struct WINRT_IMPL_EMPTY_BASES ICatalogModelInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICatalogModelInfo>
    {
        ICatalogModelInfo(std::nullptr_t = nullptr) noexcept {}
        ICatalogModelInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICatalogModelInstance :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICatalogModelInstance>
    {
        ICatalogModelInstance(std::nullptr_t = nullptr) noexcept {}
        ICatalogModelInstance(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICatalogModelInstanceResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICatalogModelInstanceResult>
    {
        ICatalogModelInstanceResult(std::nullptr_t = nullptr) noexcept {}
        ICatalogModelInstanceResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICatalogModelSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICatalogModelSource>
    {
        ICatalogModelSource(std::nullptr_t = nullptr) noexcept {}
        ICatalogModelSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES ICatalogModelSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICatalogModelSourceStatics>
    {
        ICatalogModelSourceStatics(std::nullptr_t = nullptr) noexcept {}
        ICatalogModelSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExecutionProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExecutionProvider>
    {
        IExecutionProvider(std::nullptr_t = nullptr) noexcept {}
        IExecutionProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExecutionProviderCatalog :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExecutionProviderCatalog>
    {
        IExecutionProviderCatalog(std::nullptr_t = nullptr) noexcept {}
        IExecutionProviderCatalog(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExecutionProviderCatalogStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExecutionProviderCatalogStatics>
    {
        IExecutionProviderCatalogStatics(std::nullptr_t = nullptr) noexcept {}
        IExecutionProviderCatalogStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IExecutionProviderReadyResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IExecutionProviderReadyResult>
    {
        IExecutionProviderReadyResult(std::nullptr_t = nullptr) noexcept {}
        IExecutionProviderReadyResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWinMLModelCatalog :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWinMLModelCatalog>
    {
        IWinMLModelCatalog(std::nullptr_t = nullptr) noexcept {}
        IWinMLModelCatalog(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IWinMLModelCatalogFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWinMLModelCatalogFactory>
    {
        IWinMLModelCatalogFactory(std::nullptr_t = nullptr) noexcept {}
        IWinMLModelCatalogFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
