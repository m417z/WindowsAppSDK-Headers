// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_UI_Content_2_H
#define WINRT_Microsoft_UI_Content_2_H
#include "winrt/impl/Microsoft.UI.1.h"
#include "winrt/impl/Microsoft.UI.Composition.1.h"
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.UI.Composition.1.h"
#include "winrt/impl/Windows.UI.Core.1.h"
#include "winrt/impl/Microsoft.UI.Content.1.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Content
{
    struct __declspec(empty_bases) ChildContentLink : winrt::Microsoft::UI::Content::IChildContentLink,
        impl::require<ChildContentLink, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::IClosableNotifier, winrt::Microsoft::UI::Content::IContentLink, winrt::Microsoft::UI::Content::IContentSiteBridge, winrt::Microsoft::UI::Content::IContentSiteBridge2>
    {
        ChildContentLink(std::nullptr_t) noexcept {}
        ChildContentLink(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IChildContentLink(ptr, take_ownership_from_abi) {}
        static auto Create(winrt::Microsoft::UI::Content::ContentIsland const& parent, winrt::Microsoft::UI::Composition::ContainerVisual const& placementVisual);
        static auto Create(winrt::Microsoft::UI::Content::ContentIsland const& parent, winrt::Windows::UI::Composition::ContainerVisual const& placementVisual);
    };
    struct __declspec(empty_bases) ContentAppWindowBridge : winrt::Microsoft::UI::Content::IContentAppWindowBridge,
        impl::require<ContentAppWindowBridge, winrt::Microsoft::UI::Content::IContentNodeOwner>
    {
        ContentAppWindowBridge(std::nullptr_t) noexcept {}
        ContentAppWindowBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentAppWindowBridge(ptr, take_ownership_from_abi) {}
        static auto GetForWindowId(winrt::Microsoft::UI::WindowId const& childWindowId);
    };
    struct __declspec(empty_bases) ContentCoordinateConverter : winrt::Microsoft::UI::Content::IContentCoordinateConverter
    {
        ContentCoordinateConverter(std::nullptr_t) noexcept {}
        ContentCoordinateConverter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentCoordinateConverter(ptr, take_ownership_from_abi) {}
        static auto CreateForWindowId(winrt::Microsoft::UI::WindowId const& windowId);
    };
    struct __declspec(empty_bases) ContentDeferral : winrt::Microsoft::UI::Content::IContentDeferral
    {
        ContentDeferral(std::nullptr_t) noexcept {}
        ContentDeferral(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentDeferral(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentEnvironmentSettingChangedEventArgs : winrt::Microsoft::UI::Content::IContentEnvironmentSettingChangedEventArgs
    {
        ContentEnvironmentSettingChangedEventArgs(std::nullptr_t) noexcept {}
        ContentEnvironmentSettingChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentEnvironmentSettingChangedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentEnvironmentStateChangedEventArgs : winrt::Microsoft::UI::Content::IContentEnvironmentStateChangedEventArgs
    {
        ContentEnvironmentStateChangedEventArgs(std::nullptr_t) noexcept {}
        ContentEnvironmentStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentEnvironmentStateChangedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentExternalBackdropLink : winrt::Microsoft::UI::Content::IContentExternalBackdropLink,
        impl::require<ContentExternalBackdropLink, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::Composition::ICompositionSupportsSystemBackdrop>
    {
        ContentExternalBackdropLink(std::nullptr_t) noexcept {}
        ContentExternalBackdropLink(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentExternalBackdropLink(ptr, take_ownership_from_abi) {}
        static auto Create(winrt::Microsoft::UI::Composition::Compositor const& compositor);
    };
    struct __declspec(empty_bases) ContentExternalOutputLink : winrt::Microsoft::UI::Content::IContentExternalOutputLink,
        impl::require<ContentExternalOutputLink, winrt::Windows::Foundation::IClosable>
    {
        ContentExternalOutputLink(std::nullptr_t) noexcept {}
        ContentExternalOutputLink(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentExternalOutputLink(ptr, take_ownership_from_abi) {}
        static auto Create(winrt::Microsoft::UI::Composition::Compositor const& compositor);
        static auto IsSupported();
    };
    struct __declspec(empty_bases) ContentIsland : winrt::Microsoft::UI::Content::IContentIsland,
        impl::require<ContentIsland, winrt::Microsoft::UI::Content::IContentIsland2, winrt::Microsoft::UI::Content::IContentIsland3, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::IClosableNotifier, winrt::Microsoft::UI::Composition::ICompositionSupportsSystemBackdrop, winrt::Microsoft::UI::Content::IContentIslandEndpointConnectionPrivate>
    {
        ContentIsland(std::nullptr_t) noexcept {}
        ContentIsland(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentIsland(ptr, take_ownership_from_abi) {}
        static auto Create(winrt::Microsoft::UI::Composition::Visual const& root);
        static auto FindAllForCompositor(winrt::Microsoft::UI::Composition::Compositor const& compositor);
        static auto FindAllForCurrentThread();
        static auto GetByVisual(winrt::Microsoft::UI::Composition::Visual const& child);
        static auto GetFromId(uint64_t id);
        static auto Create(winrt::Windows::UI::Composition::Visual const& root);
        static auto FindAllForCompositor(winrt::Windows::UI::Composition::Compositor const& compositor);
        static auto GetByVisual(winrt::Windows::UI::Composition::Visual const& child);
    };
    struct __declspec(empty_bases) ContentIslandAutomationProviderRequestedEventArgs : winrt::Microsoft::UI::Content::IContentIslandAutomationProviderRequestedEventArgs
    {
        ContentIslandAutomationProviderRequestedEventArgs(std::nullptr_t) noexcept {}
        ContentIslandAutomationProviderRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentIslandAutomationProviderRequestedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentIslandEnvironment : winrt::Microsoft::UI::Content::IContentIslandEnvironment,
        impl::require<ContentIslandEnvironment, winrt::Microsoft::UI::Content::IContentIslandEnvironment2>
    {
        ContentIslandEnvironment(std::nullptr_t) noexcept {}
        ContentIslandEnvironment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentIslandEnvironment(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentIslandStateChangedEventArgs : winrt::Microsoft::UI::Content::IContentIslandStateChangedEventArgs
    {
        ContentIslandStateChangedEventArgs(std::nullptr_t) noexcept {}
        ContentIslandStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentIslandStateChangedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentSite : winrt::Microsoft::UI::Content::IContentSite,
        impl::require<ContentSite, winrt::Microsoft::UI::Content::IContentSite2, winrt::Microsoft::UI::Content::IContentSite3, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::IClosableNotifier>
    {
        ContentSite(std::nullptr_t) noexcept {}
        ContentSite(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentSite(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentSiteEnvironment : winrt::Microsoft::UI::Content::IContentSiteEnvironment,
        impl::require<ContentSiteEnvironment, winrt::Microsoft::UI::Content::IContentSiteEnvironment2>
    {
        ContentSiteEnvironment(std::nullptr_t) noexcept {}
        ContentSiteEnvironment(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentSiteEnvironment(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentSiteEnvironmentView : winrt::Microsoft::UI::Content::IContentSiteEnvironmentView
    {
        ContentSiteEnvironmentView(std::nullptr_t) noexcept {}
        ContentSiteEnvironmentView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentSiteEnvironmentView(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentSiteRequestedStateChangedEventArgs : winrt::Microsoft::UI::Content::IContentSiteRequestedStateChangedEventArgs
    {
        ContentSiteRequestedStateChangedEventArgs(std::nullptr_t) noexcept {}
        ContentSiteRequestedStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentSiteRequestedStateChangedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ContentSiteView : winrt::Microsoft::UI::Content::IContentSiteView,
        impl::require<ContentSiteView, winrt::Microsoft::UI::Content::IContentSiteView2>
    {
        ContentSiteView(std::nullptr_t) noexcept {}
        ContentSiteView(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentSiteView(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) CoreWindowSiteBridge : winrt::Microsoft::UI::Content::ICoreWindowSiteBridge,
        impl::require<CoreWindowSiteBridge, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::Content::IContentSiteBridge>
    {
        CoreWindowSiteBridge(std::nullptr_t) noexcept {}
        CoreWindowSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::ICoreWindowSiteBridge(ptr, take_ownership_from_abi) {}
        static auto Create(winrt::Microsoft::UI::Composition::Compositor const& compositor, winrt::Windows::UI::Core::CoreWindow const& coreWindow);
        static auto IsSupported();
    };
    struct __declspec(empty_bases) CoreWindowTopLevelWindowBridge : winrt::Microsoft::UI::Content::IContentNodeOwner
    {
        CoreWindowTopLevelWindowBridge(std::nullptr_t) noexcept {}
        CoreWindowTopLevelWindowBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IContentNodeOwner(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) DesktopChildSiteBridge : winrt::Microsoft::UI::Content::IDesktopChildSiteBridge,
        impl::base<DesktopChildSiteBridge, winrt::Microsoft::UI::Content::DesktopSiteBridge>,
        impl::require<DesktopChildSiteBridge, winrt::Microsoft::UI::Content::IContentSiteBridgeEndpointConnectionPrivate, winrt::Microsoft::UI::Content::IDesktopSiteBridge, winrt::Microsoft::UI::Content::IDesktopSiteBridge2, winrt::Microsoft::UI::IClosableNotifier, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::Content::IContentSiteBridge>
    {
        DesktopChildSiteBridge(std::nullptr_t) noexcept {}
        DesktopChildSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IDesktopChildSiteBridge(ptr, take_ownership_from_abi) {}
        static auto Create(winrt::Microsoft::UI::Composition::Compositor const& compositor, winrt::Microsoft::UI::WindowId const& parentWindowId);
    };
    struct __declspec(empty_bases) DesktopSiteBridge : winrt::Microsoft::UI::Content::IDesktopSiteBridge,
        impl::require<DesktopSiteBridge, winrt::Microsoft::UI::Content::IDesktopSiteBridge2, winrt::Microsoft::UI::IClosableNotifier, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::Content::IContentSiteBridge>
    {
        DesktopSiteBridge(std::nullptr_t) noexcept {}
        DesktopSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IDesktopSiteBridge(ptr, take_ownership_from_abi) {}
        static auto IsSupported();
    };
    struct __declspec(empty_bases) EndpointConnectionEventArgs : winrt::Microsoft::UI::Content::IEndpointConnectionEventArgs
    {
        EndpointConnectionEventArgs(std::nullptr_t) noexcept {}
        EndpointConnectionEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IEndpointConnectionEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) EndpointRequestedStateChangedEventArgs : winrt::Microsoft::UI::Content::IEndpointRequestedStateChangedEventArgs
    {
        EndpointRequestedStateChangedEventArgs(std::nullptr_t) noexcept {}
        EndpointRequestedStateChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IEndpointRequestedStateChangedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) PopupWindowSiteBridge : winrt::Microsoft::UI::Content::IPopupWindowSiteBridge,
        impl::base<PopupWindowSiteBridge, winrt::Microsoft::UI::Content::DesktopSiteBridge>,
        impl::require<PopupWindowSiteBridge, winrt::Microsoft::UI::Content::IDesktopSiteBridge, winrt::Microsoft::UI::Content::IDesktopSiteBridge2, winrt::Microsoft::UI::IClosableNotifier, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::Content::IContentSiteBridge>
    {
        PopupWindowSiteBridge(std::nullptr_t) noexcept {}
        PopupWindowSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IPopupWindowSiteBridge(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ProcessStarter : winrt::Microsoft::UI::Content::IProcessStarter
    {
        ProcessStarter(std::nullptr_t) noexcept {}
        ProcessStarter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IProcessStarter(ptr, take_ownership_from_abi) {}
        static auto StartProcess(param::hstring const& executablePath, param::hstring const& connectionInfo, uint32_t& processId);
    };
    struct __declspec(empty_bases) ReadOnlyDesktopSiteBridge : winrt::Microsoft::UI::Content::IReadOnlyDesktopSiteBridge,
        impl::require<ReadOnlyDesktopSiteBridge, winrt::Microsoft::UI::IClosableNotifier, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::Content::IContentSiteBridge>
    {
        ReadOnlyDesktopSiteBridge(std::nullptr_t) noexcept {}
        ReadOnlyDesktopSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::IReadOnlyDesktopSiteBridge(ptr, take_ownership_from_abi) {}
        static auto Create(winrt::Microsoft::UI::Composition::Compositor const& compositor, winrt::Microsoft::UI::WindowId const& windowId);
    };
    struct __declspec(empty_bases) SystemVisualSiteBridge : winrt::Microsoft::UI::Content::ISystemVisualSiteBridge,
        impl::require<SystemVisualSiteBridge, winrt::Microsoft::UI::IClosableNotifier, winrt::Windows::Foundation::IClosable, winrt::Microsoft::UI::Content::IContentSiteBridge>
    {
        SystemVisualSiteBridge(std::nullptr_t) noexcept {}
        SystemVisualSiteBridge(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Content::ISystemVisualSiteBridge(ptr, take_ownership_from_abi) {}
        static auto Create(winrt::Microsoft::UI::Composition::Compositor const& localCompositor, winrt::Windows::UI::Composition::ContainerVisual const& hostVisual, winrt::Microsoft::UI::WindowId const& parentForInputWindowId);
    };
}
#endif
