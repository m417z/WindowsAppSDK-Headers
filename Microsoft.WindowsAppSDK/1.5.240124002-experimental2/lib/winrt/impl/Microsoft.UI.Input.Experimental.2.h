// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_UI_Input_Experimental_2_H
#define WINRT_Microsoft_UI_Input_Experimental_2_H
#include "winrt/impl/Microsoft.UI.Input.1.h"
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Microsoft.UI.Input.Experimental.1.h"
WINRT_EXPORT namespace winrt::Microsoft::UI::Input::Experimental
{
    struct __declspec(empty_bases) ExpFocusChangedEventArgs : winrt::Microsoft::UI::Input::Experimental::IExpFocusChangedEventArgs
    {
        ExpFocusChangedEventArgs(std::nullptr_t) noexcept {}
        ExpFocusChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpFocusChangedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ExpFocusController : winrt::Microsoft::UI::Input::Experimental::IExpFocusController,
        impl::base<ExpFocusController, winrt::Microsoft::UI::Input::InputObject>,
        impl::require<ExpFocusController, winrt::Microsoft::UI::Input::IInputObject>
    {
        ExpFocusController(std::nullptr_t) noexcept {}
        ExpFocusController(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpFocusController(ptr, take_ownership_from_abi) {}
        static auto GetForInputSite(winrt::Microsoft::UI::Input::Experimental::ExpInputSite const& inputSite);
    };
    struct __declspec(empty_bases) ExpFocusNavigationHost : winrt::Microsoft::UI::Input::Experimental::IExpFocusNavigationHost,
        impl::base<ExpFocusNavigationHost, winrt::Microsoft::UI::Input::InputObject>,
        impl::require<ExpFocusNavigationHost, winrt::Microsoft::UI::Input::IInputObject>
    {
        ExpFocusNavigationHost(std::nullptr_t) noexcept {}
        ExpFocusNavigationHost(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpFocusNavigationHost(ptr, take_ownership_from_abi) {}
        static auto GetForInputSite(winrt::Microsoft::UI::Input::Experimental::ExpInputSite const& inputSite);
    };
    struct __declspec(empty_bases) ExpFocusNavigationRequest : winrt::Microsoft::UI::Input::Experimental::IExpFocusNavigationRequest
    {
        ExpFocusNavigationRequest(std::nullptr_t) noexcept {}
        ExpFocusNavigationRequest(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpFocusNavigationRequest(ptr, take_ownership_from_abi) {}
        static auto CreateFocusNavigationRequestReasonAndHintRect(winrt::Microsoft::UI::Input::Experimental::ExpFocusNavigationReason const& reason, winrt::Windows::Foundation::Rect const& hintRect);
        static auto CreateFocusNavigationRequestReasonHintRectAndId(winrt::Microsoft::UI::Input::Experimental::ExpFocusNavigationReason const& reason, winrt::Windows::Foundation::Rect const& hintRect, winrt::guid const& correlationId);
        static auto CreateFocusNavigationRequestWithReason(winrt::Microsoft::UI::Input::Experimental::ExpFocusNavigationReason const& reason);
    };
    struct __declspec(empty_bases) ExpFocusNavigationResult : winrt::Microsoft::UI::Input::Experimental::IExpFocusNavigationResult
    {
        ExpFocusNavigationResult(std::nullptr_t) noexcept {}
        ExpFocusNavigationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpFocusNavigationResult(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ExpInputSite : winrt::Microsoft::UI::Input::Experimental::IExpInputSite,
        impl::require<ExpInputSite, winrt::Windows::Foundation::IClosable>
    {
        ExpInputSite(std::nullptr_t) noexcept {}
        ExpInputSite(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpInputSite(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ExpNavigateFocusRequestedEventArgs : winrt::Microsoft::UI::Input::Experimental::IExpNavigateFocusRequestedEventArgs
    {
        ExpNavigateFocusRequestedEventArgs(std::nullptr_t) noexcept {}
        ExpNavigateFocusRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpNavigateFocusRequestedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ExpPointerPoint : winrt::Microsoft::UI::Input::Experimental::IExpPointerPoint
    {
        ExpPointerPoint(std::nullptr_t) noexcept {}
        ExpPointerPoint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::UI::Input::Experimental::IExpPointerPoint(ptr, take_ownership_from_abi) {}
        static auto GetCurrentPoint(uint32_t pointerId);
        static auto GetCurrentPointTransformed(uint32_t pointerId, winrt::Microsoft::UI::Input::IPointerPointTransform const& transform);
        static auto GetIntermediatePoints(uint32_t pointerId);
        static auto GetIntermediatePointsTransformed(uint32_t pointerId, winrt::Microsoft::UI::Input::IPointerPointTransform const& transform);
    };
}
#endif
