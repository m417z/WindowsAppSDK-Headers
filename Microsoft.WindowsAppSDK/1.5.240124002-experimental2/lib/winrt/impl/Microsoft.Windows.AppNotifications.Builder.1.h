// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_Windows_AppNotifications_Builder_1_H
#define WINRT_Microsoft_Windows_AppNotifications_Builder_1_H
#include "winrt/impl/Microsoft.Windows.AppNotifications.Builder.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AppNotifications::Builder
{
    struct __declspec(empty_bases) IAppNotificationBuilder :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationBuilder>
    {
        IAppNotificationBuilder(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationBuilder(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAppNotificationBuilderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationBuilderStatics>
    {
        IAppNotificationBuilderStatics(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationBuilderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAppNotificationButton :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationButton>
    {
        IAppNotificationButton(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationButton(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAppNotificationButtonFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationButtonFactory>
    {
        IAppNotificationButtonFactory(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationButtonFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAppNotificationButtonStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationButtonStatics>
    {
        IAppNotificationButtonStatics(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationButtonStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAppNotificationComboBox :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationComboBox>
    {
        IAppNotificationComboBox(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationComboBox(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAppNotificationComboBoxFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationComboBoxFactory>
    {
        IAppNotificationComboBoxFactory(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationComboBoxFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAppNotificationProgressBar :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationProgressBar>
    {
        IAppNotificationProgressBar(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationProgressBar(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAppNotificationTextProperties :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAppNotificationTextProperties>
    {
        IAppNotificationTextProperties(std::nullptr_t = nullptr) noexcept {}
        IAppNotificationTextProperties(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
