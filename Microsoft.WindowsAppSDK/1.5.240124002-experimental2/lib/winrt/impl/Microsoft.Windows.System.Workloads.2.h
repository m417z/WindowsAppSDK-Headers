// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_Windows_System_Workloads_2_H
#define WINRT_Microsoft_Windows_System_Workloads_2_H
#include "winrt/impl/Microsoft.Windows.System.Workloads.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::System::Workloads
{
    struct __declspec(empty_bases) Workload : winrt::Microsoft::Windows::System::Workloads::IWorkload
    {
        Workload(std::nullptr_t) noexcept {}
        Workload(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::System::Workloads::IWorkload(ptr, take_ownership_from_abi) {}
        Workload();
    };
    struct __declspec(empty_bases) WorkloadManager : winrt::Microsoft::Windows::System::Workloads::IWorkloadManager
    {
        WorkloadManager(std::nullptr_t) noexcept {}
        WorkloadManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::System::Workloads::IWorkloadManager(ptr, take_ownership_from_abi) {}
        static auto GetDefault();
    };
    struct __declspec(empty_bases) WorkloadProgress : winrt::Microsoft::Windows::System::Workloads::IWorkloadProgress
    {
        WorkloadProgress(std::nullptr_t) noexcept {}
        WorkloadProgress(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::System::Workloads::IWorkloadProgress(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) WorkloadResult : winrt::Microsoft::Windows::System::Workloads::IWorkloadResult
    {
        WorkloadResult(std::nullptr_t) noexcept {}
        WorkloadResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::System::Workloads::IWorkloadResult(ptr, take_ownership_from_abi) {}
    };
}
#endif
