// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_Windows_System_Workloads_1_H
#define WINRT_Microsoft_Windows_System_Workloads_1_H
#include "winrt/impl/Microsoft.Windows.System.Workloads.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::System::Workloads
{
    struct __declspec(empty_bases) IWorkload :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWorkload>
    {
        IWorkload(std::nullptr_t = nullptr) noexcept {}
        IWorkload(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IWorkloadHandler :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWorkloadHandler>
    {
        IWorkloadHandler(std::nullptr_t = nullptr) noexcept {}
        IWorkloadHandler(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IWorkloadManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWorkloadManager>
    {
        IWorkloadManager(std::nullptr_t = nullptr) noexcept {}
        IWorkloadManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IWorkloadManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWorkloadManagerStatics>
    {
        IWorkloadManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IWorkloadManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IWorkloadProgress :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWorkloadProgress>
    {
        IWorkloadProgress(std::nullptr_t = nullptr) noexcept {}
        IWorkloadProgress(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IWorkloadResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWorkloadResult>
    {
        IWorkloadResult(std::nullptr_t = nullptr) noexcept {}
        IWorkloadResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
