// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_Windows_Storage_1_H
#define WINRT_Microsoft_Windows_Storage_1_H
#include "winrt/impl/Microsoft.Windows.Storage.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::Storage
{
    struct __declspec(empty_bases) IApplicationData :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IApplicationData>
    {
        IApplicationData(std::nullptr_t = nullptr) noexcept {}
        IApplicationData(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IApplicationDataContainer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IApplicationDataContainer>
    {
        IApplicationDataContainer(std::nullptr_t = nullptr) noexcept {}
        IApplicationDataContainer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IApplicationDataStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IApplicationDataStatics>
    {
        IApplicationDataStatics(std::nullptr_t = nullptr) noexcept {}
        IApplicationDataStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
