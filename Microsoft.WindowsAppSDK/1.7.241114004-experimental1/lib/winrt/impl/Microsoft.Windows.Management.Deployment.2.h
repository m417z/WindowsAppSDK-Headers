// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230511.6

#pragma once
#ifndef WINRT_Microsoft_Windows_Management_Deployment_2_H
#define WINRT_Microsoft_Windows_Management_Deployment_2_H
#include "winrt/impl/Microsoft.Windows.Management.Deployment.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::Management::Deployment
{
    struct PackageDeploymentProgress
    {
        winrt::Microsoft::Windows::Management::Deployment::PackageDeploymentProgressStatus Status;
        double Progress;
    };
    inline bool operator==(PackageDeploymentProgress const& left, PackageDeploymentProgress const& right) noexcept
    {
        return left.Status == right.Status && left.Progress == right.Progress;
    }
    inline bool operator!=(PackageDeploymentProgress const& left, PackageDeploymentProgress const& right) noexcept
    {
        return !(left == right);
    }
    struct __declspec(empty_bases) AddPackageOptions : winrt::Microsoft::Windows::Management::Deployment::IAddPackageOptions
    {
        AddPackageOptions(std::nullptr_t) noexcept {}
        AddPackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IAddPackageOptions(ptr, take_ownership_from_abi) {}
        AddPackageOptions();
    };
    struct __declspec(empty_bases) EnsureReadyOptions : winrt::Microsoft::Windows::Management::Deployment::IEnsureReadyOptions,
        impl::require<EnsureReadyOptions, winrt::Microsoft::Windows::Management::Deployment::IEnsureReadyOptions2>
    {
        EnsureReadyOptions(std::nullptr_t) noexcept {}
        EnsureReadyOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IEnsureReadyOptions(ptr, take_ownership_from_abi) {}
        EnsureReadyOptions();
    };
    struct __declspec(empty_bases) PackageDeploymentManager : winrt::Microsoft::Windows::Management::Deployment::IPackageDeploymentManager,
        impl::require<PackageDeploymentManager, winrt::Microsoft::Windows::Management::Deployment::IPackageDeploymentManager2>
    {
        PackageDeploymentManager(std::nullptr_t) noexcept {}
        PackageDeploymentManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IPackageDeploymentManager(ptr, take_ownership_from_abi) {}
        static auto GetDefault();
        static auto IsPackageDeploymentFeatureSupported(winrt::Microsoft::Windows::Management::Deployment::PackageDeploymentFeature const& feature);
    };
    struct __declspec(empty_bases) PackageDeploymentResult : winrt::Microsoft::Windows::Management::Deployment::IPackageDeploymentResult
    {
        PackageDeploymentResult(std::nullptr_t) noexcept {}
        PackageDeploymentResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IPackageDeploymentResult(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) PackageRuntimeManager : winrt::Microsoft::Windows::Management::Deployment::IPackageRuntimeManager
    {
        PackageRuntimeManager(std::nullptr_t) noexcept {}
        PackageRuntimeManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IPackageRuntimeManager(ptr, take_ownership_from_abi) {}
        static auto GetDefault();
    };
    struct __declspec(empty_bases) PackageSet : winrt::Microsoft::Windows::Management::Deployment::IPackageSet
    {
        PackageSet(std::nullptr_t) noexcept {}
        PackageSet(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IPackageSet(ptr, take_ownership_from_abi) {}
        PackageSet();
    };
    struct __declspec(empty_bases) PackageSetItem : winrt::Microsoft::Windows::Management::Deployment::IPackageSetItem
    {
        PackageSetItem(std::nullptr_t) noexcept {}
        PackageSetItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IPackageSetItem(ptr, take_ownership_from_abi) {}
        PackageSetItem();
    };
    struct __declspec(empty_bases) PackageSetItemRuntimeDisposition : winrt::Microsoft::Windows::Management::Deployment::IPackageSetItemRuntimeDisposition
    {
        PackageSetItemRuntimeDisposition(std::nullptr_t) noexcept {}
        PackageSetItemRuntimeDisposition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IPackageSetItemRuntimeDisposition(ptr, take_ownership_from_abi) {}
        PackageSetItemRuntimeDisposition();
    };
    struct __declspec(empty_bases) PackageSetRuntimeDisposition : winrt::Microsoft::Windows::Management::Deployment::IPackageSetRuntimeDisposition
    {
        PackageSetRuntimeDisposition(std::nullptr_t) noexcept {}
        PackageSetRuntimeDisposition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IPackageSetRuntimeDisposition(ptr, take_ownership_from_abi) {}
        PackageSetRuntimeDisposition();
    };
    struct __declspec(empty_bases) PackageVolume : winrt::Microsoft::Windows::Management::Deployment::IPackageVolume
    {
        PackageVolume(std::nullptr_t) noexcept {}
        PackageVolume(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IPackageVolume(ptr, take_ownership_from_abi) {}
        static auto FindPackageVolumes();
        static auto FindPackageVolumeByPath(param::hstring const& packageStorePath);
        static auto FindPackageVolumeByName(param::hstring const& name);
    };
    struct __declspec(empty_bases) ProvisionPackageOptions : winrt::Microsoft::Windows::Management::Deployment::IProvisionPackageOptions
    {
        ProvisionPackageOptions(std::nullptr_t) noexcept {}
        ProvisionPackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IProvisionPackageOptions(ptr, take_ownership_from_abi) {}
        ProvisionPackageOptions();
    };
    struct __declspec(empty_bases) RegisterPackageOptions : winrt::Microsoft::Windows::Management::Deployment::IRegisterPackageOptions
    {
        RegisterPackageOptions(std::nullptr_t) noexcept {}
        RegisterPackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IRegisterPackageOptions(ptr, take_ownership_from_abi) {}
        RegisterPackageOptions();
    };
    struct __declspec(empty_bases) RemovePackageOptions : winrt::Microsoft::Windows::Management::Deployment::IRemovePackageOptions
    {
        RemovePackageOptions(std::nullptr_t) noexcept {}
        RemovePackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IRemovePackageOptions(ptr, take_ownership_from_abi) {}
        RemovePackageOptions();
    };
    struct __declspec(empty_bases) StagePackageOptions : winrt::Microsoft::Windows::Management::Deployment::IStagePackageOptions
    {
        StagePackageOptions(std::nullptr_t) noexcept {}
        StagePackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Management::Deployment::IStagePackageOptions(ptr, take_ownership_from_abi) {}
        StagePackageOptions();
    };
}
#endif
