// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_ContentModeration_0_H
#define WINRT_Microsoft_Windows_AI_ContentModeration_0_H
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::ContentModeration
{
    enum class SeverityLevel : int32_t
    {
        Minimum = 10,
        Low = 11,
        Medium = 12,
        High = 13,
    };
    struct IContentFilterOptions;
    struct IImageContentFilterSeverity;
    struct IImageContentFilterSeverityFactory;
    struct ITextContentFilterSeverity;
    struct ITextContentFilterSeverityFactory;
    struct ContentFilterOptions;
    struct ImageContentFilterSeverity;
    struct TextContentFilterSeverity;
    struct ContentModerationContract;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>{ using type = enum_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions> = L"Microsoft.Windows.AI.ContentModeration.ContentFilterOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity> = L"Microsoft.Windows.AI.ContentModeration.ImageContentFilterSeverity";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity> = L"Microsoft.Windows.AI.ContentModeration.TextContentFilterSeverity";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel> = L"Microsoft.Windows.AI.ContentModeration.SeverityLevel";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions> = L"Microsoft.Windows.AI.ContentModeration.IContentFilterOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity> = L"Microsoft.Windows.AI.ContentModeration.IImageContentFilterSeverity";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory> = L"Microsoft.Windows.AI.ContentModeration.IImageContentFilterSeverityFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity> = L"Microsoft.Windows.AI.ContentModeration.ITextContentFilterSeverity";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory> = L"Microsoft.Windows.AI.ContentModeration.ITextContentFilterSeverityFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::ContentModeration::ContentModerationContract> = L"Microsoft.Windows.AI.ContentModeration.ContentModerationContract";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions>{ 0x841EC57B,0x0E82,0x5541,{ 0x98,0xE4,0xB1,0xAC,0x35,0xFB,0xB7,0x7D } }; // 841EC57B-0E82-5541-98E4-B1AC35FBB77D
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity>{ 0x13B66C94,0xB67C,0x5A2C,{ 0x90,0x14,0x89,0x2A,0xFF,0xB3,0xFA,0xF8 } }; // 13B66C94-B67C-5A2C-9014-892AFFB3FAF8
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory>{ 0xFD1733DA,0x62ED,0x531C,{ 0xB4,0xA6,0x97,0x49,0x13,0x2B,0x45,0x18 } }; // FD1733DA-62ED-531C-B4A6-9749132B4518
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity>{ 0x0A52DAB2,0x30E8,0x5C21,{ 0x83,0x1A,0x9E,0xBE,0xE3,0xA1,0x17,0x69 } }; // 0A52DAB2-30E8-5C21-831A-9EBEE3A11769
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory>{ 0xDD2AF708,0x1DA1,0x519D,{ 0xB3,0x4A,0xC5,0x1D,0x69,0x0D,0x98,0x20 } }; // DD2AF708-1DA1-519D-B34A-C51D690D9820
    template <> struct default_interface<winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions>{ using type = winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity>{ using type = winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity>{ using type = winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity; };
    template <> struct abi<winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_PromptMaxAllowedSeverityLevel(void**) noexcept = 0;
            virtual int32_t __stdcall put_PromptMaxAllowedSeverityLevel(void*) noexcept = 0;
            virtual int32_t __stdcall get_ResponseMaxAllowedSeverityLevel(void**) noexcept = 0;
            virtual int32_t __stdcall put_ResponseMaxAllowedSeverityLevel(void*) noexcept = 0;
            virtual int32_t __stdcall get_ImageMaxAllowedSeverityLevel(void**) noexcept = 0;
            virtual int32_t __stdcall put_ImageMaxAllowedSeverityLevel(void*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_AdultContentLevel(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_AdultContentLevel(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_RacyContentLevel(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_RacyContentLevel(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_GoryContentLevel(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_GoryContentLevel(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_ViolentContentLevel(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_ViolentContentLevel(int32_t) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(int32_t, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Hate(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Hate(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_Sexual(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Sexual(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_Violent(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Violent(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_SelfHarm(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_SelfHarm(int32_t) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(int32_t, void**) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_ContentModeration_IContentFilterOptions
    {
        [[nodiscard]] auto PromptMaxAllowedSeverityLevel() const;
        auto PromptMaxAllowedSeverityLevel(winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity const& value) const;
        [[nodiscard]] auto ResponseMaxAllowedSeverityLevel() const;
        auto ResponseMaxAllowedSeverityLevel(winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity const& value) const;
        [[nodiscard]] auto ImageMaxAllowedSeverityLevel() const;
        auto ImageMaxAllowedSeverityLevel(winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity const& value) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_ContentModeration_IContentFilterOptions<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity
    {
        [[nodiscard]] auto AdultContentLevel() const;
        auto AdultContentLevel(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const;
        [[nodiscard]] auto RacyContentLevel() const;
        auto RacyContentLevel(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const;
        [[nodiscard]] auto GoryContentLevel() const;
        auto GoryContentLevel(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const;
        [[nodiscard]] auto ViolentContentLevel() const;
        auto ViolentContentLevel(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverityFactory
    {
        auto CreateInstance(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& severityForALlCategories) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverityFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity
    {
        [[nodiscard]] auto Hate() const;
        auto Hate(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const;
        [[nodiscard]] auto Sexual() const;
        auto Sexual(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const;
        [[nodiscard]] auto Violent() const;
        auto Violent(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const;
        [[nodiscard]] auto SelfHarm() const;
        auto SelfHarm(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverityFactory
    {
        auto CreateInstance(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& severityForAllCategories) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverityFactory<D>;
    };
}
#endif
