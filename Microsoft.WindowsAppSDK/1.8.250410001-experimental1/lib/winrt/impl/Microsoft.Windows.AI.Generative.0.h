// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_Generative_0_H
#define WINRT_Microsoft_Windows_AI_Generative_0_H
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Imaging
{
    struct ImageBuffer;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI
{
    enum class AIFeatureReadyState : int32_t;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::ContentModeration
{
    struct ContentFilterOptions;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::SemanticSearch
{
    struct EmbeddingVector;
}
WINRT_EXPORT namespace winrt::Windows::Foundation
{
    struct HResult;
}
WINRT_EXPORT namespace winrt::Windows::Foundation::Collections
{
    template <typename T> struct WINRT_IMPL_EMPTY_BASES IIterable;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::Generative
{
    enum class ImageDescriptionKind : int32_t
    {
        BriefDescription = 0,
        DetailedDescrition = 1,
        DiagramDescription = 2,
        AccessibleDescription = 3,
    };
    enum class ImageDescriptionResultStatus : int32_t
    {
        Complete = 0,
        InProgress = 1,
        BlockedByPolicy = 2,
        ImageBlockedByContentModeration = 3,
        TextInImageBlockedByContentModeration = 4,
        DescriptionTextBlockedByContentModeration = 5,
        ImageHasTooMuchText = 6,
        InternalError = 7,
    };
    enum class LanguageModelResponseStatus : int32_t
    {
        Complete = 0,
        InProgress = 1,
        BlockedByPolicy = 2,
        PromptLargerThanContext = 3,
        PromptBlockedByContentModeration = 4,
        ResponseBlockedByContentModeration = 5,
        Error = 6,
    };
    struct IImageDescriptionGenerator;
    struct IImageDescriptionGeneratorStatics;
    struct IImageDescriptionResult;
    struct ILanguageModel;
    struct ILanguageModelContext;
    struct ILanguageModelEmbeddingVectorResult;
    struct ILanguageModelOptions;
    struct ILanguageModelResponseResult;
    struct ILanguageModelStatics;
    struct ImageDescriptionGenerator;
    struct ImageDescriptionResult;
    struct LanguageModel;
    struct LanguageModelContext;
    struct LanguageModelEmbeddingVectorResult;
    struct LanguageModelOptions;
    struct LanguageModelResponseResult;
    struct ImageDescriptionContract;
    struct LanguageModelContract;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionResult>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModel>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelEmbeddingVectorResult>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseResult>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionGenerator>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionResult>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModel>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelContext>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelEmbeddingVectorResult>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponseResult>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionKind>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionResultStatus>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponseStatus>{ using type = enum_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionGenerator> = L"Microsoft.Windows.AI.Generative.ImageDescriptionGenerator";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionResult> = L"Microsoft.Windows.AI.Generative.ImageDescriptionResult";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModel> = L"Microsoft.Windows.AI.Generative.LanguageModel";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelContext> = L"Microsoft.Windows.AI.Generative.LanguageModelContext";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelEmbeddingVectorResult> = L"Microsoft.Windows.AI.Generative.LanguageModelEmbeddingVectorResult";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions> = L"Microsoft.Windows.AI.Generative.LanguageModelOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponseResult> = L"Microsoft.Windows.AI.Generative.LanguageModelResponseResult";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionKind> = L"Microsoft.Windows.AI.Generative.ImageDescriptionKind";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionResultStatus> = L"Microsoft.Windows.AI.Generative.ImageDescriptionResultStatus";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponseStatus> = L"Microsoft.Windows.AI.Generative.LanguageModelResponseStatus";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator> = L"Microsoft.Windows.AI.Generative.IImageDescriptionGenerator";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics> = L"Microsoft.Windows.AI.Generative.IImageDescriptionGeneratorStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionResult> = L"Microsoft.Windows.AI.Generative.IImageDescriptionResult";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel> = L"Microsoft.Windows.AI.Generative.ILanguageModel";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext> = L"Microsoft.Windows.AI.Generative.ILanguageModelContext";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelEmbeddingVectorResult> = L"Microsoft.Windows.AI.Generative.ILanguageModelEmbeddingVectorResult";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions> = L"Microsoft.Windows.AI.Generative.ILanguageModelOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseResult> = L"Microsoft.Windows.AI.Generative.ILanguageModelResponseResult";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics> = L"Microsoft.Windows.AI.Generative.ILanguageModelStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionContract> = L"Microsoft.Windows.AI.Generative.ImageDescriptionContract";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelContract> = L"Microsoft.Windows.AI.Generative.LanguageModelContract";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator>{ 0x0462760C,0x2C92,0x5C2A,{ 0xA4,0xBE,0x87,0x74,0x42,0xA4,0x5C,0x03 } }; // 0462760C-2C92-5C2A-A4BE-877442A45C03
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics>{ 0x6A563725,0x5A27,0x563F,{ 0x84,0x5F,0xB9,0x7B,0x07,0x79,0xD0,0x8E } }; // 6A563725-5A27-563F-845F-B97B0779D08E
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionResult>{ 0xB5AA0EA8,0x27B2,0x5D3F,{ 0x9E,0xA2,0x3F,0x6B,0xAF,0xFF,0xD5,0x1D } }; // B5AA0EA8-27B2-5D3F-9EA2-3F6BAFFFD51D
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel>{ 0x971CE7D6,0xC226,0x5805,{ 0x87,0xFB,0x9F,0x97,0x8E,0x5D,0xCD,0x7E } }; // 971CE7D6-C226-5805-87FB-9F978E5DCD7E
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext>{ 0xC8948656,0x8131,0x5F7A,{ 0x81,0xC8,0x28,0x27,0x9B,0xBA,0x0A,0x86 } }; // C8948656-8131-5F7A-81C8-28279BBA0A86
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelEmbeddingVectorResult>{ 0x0D27A398,0xBF83,0x599D,{ 0x89,0x53,0xE4,0x53,0x02,0x98,0x40,0xE0 } }; // 0D27A398-BF83-599D-8953-E453029840E0
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions>{ 0x04BC54CE,0x777E,0x510B,{ 0xA4,0x10,0xD4,0xA5,0x58,0x5B,0xDA,0xEE } }; // 04BC54CE-777E-510B-A410-D4A5585BDAEE
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseResult>{ 0x61F7587E,0x6D00,0x5557,{ 0xAB,0x06,0x3F,0x47,0x84,0x00,0x22,0xB3 } }; // 61F7587E-6D00-5557-AB06-3F47840022B3
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics>{ 0x5E96B098,0xCA72,0x5975,{ 0xA5,0xA5,0x03,0xB1,0xC6,0x02,0x73,0x71 } }; // 5E96B098-CA72-5975-A5A5-03B1C6027371
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionGenerator>{ using type = winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionResult>{ using type = winrt::Microsoft::Windows::AI::Generative::IImageDescriptionResult; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModel>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModel; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModelContext>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModelEmbeddingVectorResult>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModelEmbeddingVectorResult; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponseResult>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseResult; };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall DescribeAsync(void*, int32_t, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetReadyState(int32_t*) noexcept = 0;
            virtual int32_t __stdcall EnsureReadyAsync(void**) noexcept = 0;
            virtual int32_t __stdcall CreateAsync(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionResult>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Description(void**) noexcept = 0;
            virtual int32_t __stdcall get_Status(int32_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModel>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseAsync2(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseAsync3(void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromEmbeddingsAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromEmbeddingsAsync2(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromEmbeddingsAsync3(void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateEmbeddingVectors(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateEmbeddingVectors2(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GetUsablePromptLength(void*, uint64_t*) noexcept = 0;
            virtual int32_t __stdcall GetUsablePromptLength2(void*, void*, uint64_t*) noexcept = 0;
            virtual int32_t __stdcall GetVectorSpaceId(winrt::guid*) noexcept = 0;
            virtual int32_t __stdcall CreateContext(void**) noexcept = 0;
            virtual int32_t __stdcall CreateContext2(void*, void**) noexcept = 0;
            virtual int32_t __stdcall CreateContext3(void*, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelEmbeddingVectorResult>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_EmbeddingVectors(void**) noexcept = 0;
            virtual int32_t __stdcall get_Status(int32_t*) noexcept = 0;
            virtual int32_t __stdcall get_ExtendedError(winrt::hresult*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Temperature(float*) noexcept = 0;
            virtual int32_t __stdcall put_Temperature(float) noexcept = 0;
            virtual int32_t __stdcall get_TopP(float*) noexcept = 0;
            virtual int32_t __stdcall put_TopP(float) noexcept = 0;
            virtual int32_t __stdcall get_TopK(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall put_TopK(uint32_t) noexcept = 0;
            virtual int32_t __stdcall get_ContentFilterOptions(void**) noexcept = 0;
            virtual int32_t __stdcall put_ContentFilterOptions(void*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseResult>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Text(void**) noexcept = 0;
            virtual int32_t __stdcall get_Status(int32_t*) noexcept = 0;
            virtual int32_t __stdcall get_ExtendedError(winrt::hresult*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetReadyState(int32_t*) noexcept = 0;
            virtual int32_t __stdcall EnsureReadyAsync(void**) noexcept = 0;
            virtual int32_t __stdcall CreateAsync(void**) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_IImageDescriptionGenerator
    {
        auto DescribeAsync(winrt::Microsoft::Graphics::Imaging::ImageBuffer const& image, winrt::Microsoft::Windows::AI::Generative::ImageDescriptionKind const& kind, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_IImageDescriptionGenerator<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_IImageDescriptionGeneratorStatics
    {
        auto GetReadyState() const;
        auto EnsureReadyAsync() const;
        auto CreateAsync() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_IImageDescriptionGeneratorStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_IImageDescriptionResult
    {
        [[nodiscard]] auto Description() const;
        [[nodiscard]] auto Status() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionResult>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_IImageDescriptionResult<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModel
    {
        auto GenerateResponseAsync(param::hstring const& prompt) const;
        auto GenerateResponseAsync(param::hstring const& prompt, winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options) const;
        auto GenerateResponseAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelContext const& context, param::hstring const& prompt, winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options) const;
        auto GenerateResponseFromEmbeddingsAsync(param::async_iterable<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding) const;
        auto GenerateResponseFromEmbeddingsAsync(param::async_iterable<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding, winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options) const;
        auto GenerateResponseFromEmbeddingsAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelContext const& context, param::async_iterable<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding, winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options) const;
        auto GenerateEmbeddingVectors(param::hstring const& prompt) const;
        auto GenerateEmbeddingVectors(param::hstring const& prompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto GetUsablePromptLength(param::hstring const& prompt) const;
        auto GetUsablePromptLength(winrt::Microsoft::Windows::AI::Generative::LanguageModelContext const& context, param::hstring const& prompt) const;
        auto GetVectorSpaceId() const;
        auto CreateContext() const;
        auto CreateContext(param::hstring const& systemPrompt) const;
        auto CreateContext(param::hstring const& systemPrompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModel>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModel<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelContext
    {
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelContext<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelEmbeddingVectorResult
    {
        [[nodiscard]] auto EmbeddingVectors() const;
        [[nodiscard]] auto Status() const;
        [[nodiscard]] auto ExtendedError() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelEmbeddingVectorResult>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelEmbeddingVectorResult<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelOptions
    {
        [[nodiscard]] auto Temperature() const;
        auto Temperature(float value) const;
        [[nodiscard]] auto TopP() const;
        auto TopP(float value) const;
        [[nodiscard]] auto TopK() const;
        auto TopK(uint32_t value) const;
        [[nodiscard]] auto ContentFilterOptions() const;
        auto ContentFilterOptions(winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& value) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelOptions<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelResponseResult
    {
        [[nodiscard]] auto Text() const;
        [[nodiscard]] auto Status() const;
        [[nodiscard]] auto ExtendedError() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseResult>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelResponseResult<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelStatics
    {
        auto GetReadyState() const;
        auto EnsureReadyAsync() const;
        auto CreateAsync() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelStatics<D>;
    };
}
#endif
