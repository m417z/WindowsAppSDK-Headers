// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Microsoft_Graphics_Imaging_2_H
#define WINRT_Microsoft_Graphics_Imaging_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.Foundation.Collections.1.h"
#include "winrt/impl/Windows.Graphics.1.h"
#include "winrt/impl/Windows.Graphics.Imaging.1.h"
#include "winrt/impl/Windows.Storage.Streams.1.h"
#include "winrt/impl/Microsoft.Graphics.Imaging.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Imaging
{
    struct WINRT_IMPL_EMPTY_BASES ImageBuffer : winrt::Microsoft::Graphics::Imaging::IImageBuffer,
        impl::require<ImageBuffer, winrt::Windows::Foundation::IClosable>
    {
        ImageBuffer(std::nullptr_t) noexcept {}
        ImageBuffer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Graphics::Imaging::IImageBuffer(ptr, take_ownership_from_abi) {}
        ImageBuffer(winrt::Windows::Storage::Streams::IBuffer const& buffer, winrt::Microsoft::Graphics::Imaging::PixelFormat const& pixelFormat, uint32_t width, uint32_t height);
        static auto CreateCopyFromBitmap(winrt::Windows::Graphics::Imaging::SoftwareBitmap const& softwareBitmap);
        static auto CreateBufferAttachedToBitmap(winrt::Windows::Graphics::Imaging::SoftwareBitmap const& softwareBitmap);
        static auto CreateFromBuffer(winrt::Windows::Storage::Streams::IBuffer const& buffer, winrt::Microsoft::Graphics::Imaging::PixelFormat const& pixelFormat, uint32_t width, uint32_t height);
        static auto CreateFromBufferWithStride(winrt::Windows::Storage::Streams::IBuffer const& buffer, winrt::Microsoft::Graphics::Imaging::PixelFormat const& pixelFormat, uint32_t width, uint32_t height, uint32_t stride);
    };
    struct WINRT_IMPL_EMPTY_BASES ImageObjectExtractor : winrt::Microsoft::Graphics::Imaging::IImageObjectExtractor,
        impl::require<ImageObjectExtractor, winrt::Windows::Foundation::IClosable>
    {
        ImageObjectExtractor(std::nullptr_t) noexcept {}
        ImageObjectExtractor(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Graphics::Imaging::IImageObjectExtractor(ptr, take_ownership_from_abi) {}
        static auto CreateWithSoftwareBitmapAsync(winrt::Windows::Graphics::Imaging::SoftwareBitmap const& softwareBitmap);
        static auto CreateWithImageBufferAsync(winrt::Microsoft::Graphics::Imaging::ImageBuffer const& imageBuffer);
        static auto GetReadyState();
        static auto EnsureReadyAsync();
    };
    struct WINRT_IMPL_EMPTY_BASES ImageObjectExtractorHint : winrt::Microsoft::Graphics::Imaging::IImageObjectExtractorHint
    {
        ImageObjectExtractorHint(std::nullptr_t) noexcept {}
        ImageObjectExtractorHint(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Graphics::Imaging::IImageObjectExtractorHint(ptr, take_ownership_from_abi) {}
        ImageObjectExtractorHint(param::vector<winrt::Windows::Graphics::RectInt32> const& includeRects, param::vector<winrt::Windows::Graphics::PointInt32> const& includePoints, param::vector<winrt::Windows::Graphics::PointInt32> const& excludePoints);
    };
    struct WINRT_IMPL_EMPTY_BASES ImageObjectRemover : winrt::Microsoft::Graphics::Imaging::IImageObjectRemover,
        impl::require<ImageObjectRemover, winrt::Windows::Foundation::IClosable>
    {
        ImageObjectRemover(std::nullptr_t) noexcept {}
        ImageObjectRemover(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Graphics::Imaging::IImageObjectRemover(ptr, take_ownership_from_abi) {}
        static auto GetReadyState();
        static auto EnsureReadyAsync();
        static auto CreateAsync();
    };
    struct WINRT_IMPL_EMPTY_BASES ImageScaler : winrt::Microsoft::Graphics::Imaging::IImageScaler,
        impl::require<ImageScaler, winrt::Windows::Foundation::IClosable>
    {
        ImageScaler(std::nullptr_t) noexcept {}
        ImageScaler(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Graphics::Imaging::IImageScaler(ptr, take_ownership_from_abi) {}
        static auto GetReadyState();
        static auto EnsureReadyAsync();
        static auto CreateAsync();
    };
}
#endif
