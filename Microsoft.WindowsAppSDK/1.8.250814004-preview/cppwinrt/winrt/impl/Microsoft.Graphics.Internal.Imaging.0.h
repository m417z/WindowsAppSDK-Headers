// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Graphics_Internal_Imaging_0_H
#define WINRT_Microsoft_Graphics_Internal_Imaging_0_H
WINRT_EXPORT namespace winrt::Microsoft::Graphics::ImagingInternal
{
    struct IDepthMapCreatorSession2;
    struct IDetectFacesResult;
    struct IDetectedFace;
    struct IFaceDetectorSession;
    struct IImageObjectExtractorSession;
    struct IImageScalerSession;
    struct IImageSegmenterSession;
    struct IParallaxCreatorSession3;
    struct ITrimapImageSegmenterSession3;
}
WINRT_EXPORT namespace winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover
{
    struct IImageObjectRemoverSession;
}
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Internal::Imaging
{
    struct DepthMapCreatorSession;
    struct DetectFacesResult;
    struct DetectedFace;
    struct FaceDetectorSession;
    struct ImageObjectExtractorSession;
    struct ImageObjectRemoverSession;
    struct ImageScalerSession;
    struct ImageSegmenterSession;
    struct ParallaxCreatorSession;
    struct TrimapImageSegmenterSession;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::DepthMapCreatorSession>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::DetectFacesResult>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::DetectedFace>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::FaceDetectorSession>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::ImageObjectExtractorSession>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::ImageObjectRemoverSession>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::ImageScalerSession>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::ImageSegmenterSession>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::ParallaxCreatorSession>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Graphics::Internal::Imaging::TrimapImageSegmenterSession>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::DepthMapCreatorSession> = L"Microsoft.Graphics.Internal.Imaging.DepthMapCreatorSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::DetectFacesResult> = L"Microsoft.Graphics.Internal.Imaging.DetectFacesResult";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::DetectedFace> = L"Microsoft.Graphics.Internal.Imaging.DetectedFace";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::FaceDetectorSession> = L"Microsoft.Graphics.Internal.Imaging.FaceDetectorSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::ImageObjectExtractorSession> = L"Microsoft.Graphics.Internal.Imaging.ImageObjectExtractorSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::ImageObjectRemoverSession> = L"Microsoft.Graphics.Internal.Imaging.ImageObjectRemoverSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::ImageScalerSession> = L"Microsoft.Graphics.Internal.Imaging.ImageScalerSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::ImageSegmenterSession> = L"Microsoft.Graphics.Internal.Imaging.ImageSegmenterSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::ParallaxCreatorSession> = L"Microsoft.Graphics.Internal.Imaging.ParallaxCreatorSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Graphics::Internal::Imaging::TrimapImageSegmenterSession> = L"Microsoft.Graphics.Internal.Imaging.TrimapImageSegmenterSession";
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::DepthMapCreatorSession>{ using type = winrt::Microsoft::Graphics::ImagingInternal::IDepthMapCreatorSession2; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::DetectFacesResult>{ using type = winrt::Microsoft::Graphics::ImagingInternal::IDetectFacesResult; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::DetectedFace>{ using type = winrt::Microsoft::Graphics::ImagingInternal::IDetectedFace; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::FaceDetectorSession>{ using type = winrt::Microsoft::Graphics::ImagingInternal::IFaceDetectorSession; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::ImageObjectExtractorSession>{ using type = winrt::Microsoft::Graphics::ImagingInternal::IImageObjectExtractorSession; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::ImageObjectRemoverSession>{ using type = winrt::Microsoft::Graphics::ImagingInternal::ImageObjectRemover::IImageObjectRemoverSession; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::ImageScalerSession>{ using type = winrt::Microsoft::Graphics::ImagingInternal::IImageScalerSession; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::ImageSegmenterSession>{ using type = winrt::Microsoft::Graphics::ImagingInternal::IImageSegmenterSession; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::ParallaxCreatorSession>{ using type = winrt::Microsoft::Graphics::ImagingInternal::IParallaxCreatorSession3; };
    template <> struct default_interface<winrt::Microsoft::Graphics::Internal::Imaging::TrimapImageSegmenterSession>{ using type = winrt::Microsoft::Graphics::ImagingInternal::ITrimapImageSegmenterSession3; };
}
#endif
