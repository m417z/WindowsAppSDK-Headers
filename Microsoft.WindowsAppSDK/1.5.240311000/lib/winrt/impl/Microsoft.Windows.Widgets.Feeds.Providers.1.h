// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_Windows_Widgets_Feeds_Providers_1_H
#define WINRT_Microsoft_Windows_Widgets_Feeds_Providers_1_H
#include "winrt/impl/Microsoft.Windows.Widgets.Feeds.Providers.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::Widgets::Feeds::Providers
{
    struct __declspec(empty_bases) ICustomQueryParametersRequestedArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomQueryParametersRequestedArgs>
    {
        ICustomQueryParametersRequestedArgs(std::nullptr_t = nullptr) noexcept {}
        ICustomQueryParametersRequestedArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICustomQueryParametersUpdateOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomQueryParametersUpdateOptions>
    {
        ICustomQueryParametersUpdateOptions(std::nullptr_t = nullptr) noexcept {}
        ICustomQueryParametersUpdateOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ICustomQueryParametersUpdateOptionsFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ICustomQueryParametersUpdateOptionsFactory>
    {
        ICustomQueryParametersUpdateOptionsFactory(std::nullptr_t = nullptr) noexcept {}
        ICustomQueryParametersUpdateOptionsFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFeedDisabledArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFeedDisabledArgs>
    {
        IFeedDisabledArgs(std::nullptr_t = nullptr) noexcept {}
        IFeedDisabledArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFeedEnabledArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFeedEnabledArgs>
    {
        IFeedEnabledArgs(std::nullptr_t = nullptr) noexcept {}
        IFeedEnabledArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFeedManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFeedManager>
    {
        IFeedManager(std::nullptr_t = nullptr) noexcept {}
        IFeedManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFeedManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFeedManagerStatics>
    {
        IFeedManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IFeedManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFeedProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFeedProvider>
    {
        IFeedProvider(std::nullptr_t = nullptr) noexcept {}
        IFeedProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFeedProviderDisabledArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFeedProviderDisabledArgs>
    {
        IFeedProviderDisabledArgs(std::nullptr_t = nullptr) noexcept {}
        IFeedProviderDisabledArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFeedProviderEnabledArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFeedProviderEnabledArgs>
    {
        IFeedProviderEnabledArgs(std::nullptr_t = nullptr) noexcept {}
        IFeedProviderEnabledArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFeedProviderInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFeedProviderInfo>
    {
        IFeedProviderInfo(std::nullptr_t = nullptr) noexcept {}
        IFeedProviderInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
