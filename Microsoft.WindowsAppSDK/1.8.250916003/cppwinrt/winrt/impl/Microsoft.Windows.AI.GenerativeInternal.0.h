// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.250303.1

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_GenerativeInternal_0_H
#define WINRT_Microsoft_Windows_AI_GenerativeInternal_0_H
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::FoundationInternal
{
    struct EmbeddingVector;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::PrivateCommon
{
    struct ImageBufferResource;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::SemanticSearch
{
    struct EmbeddingVector;
}
WINRT_EXPORT namespace winrt::Windows::Foundation::Collections
{
    template <typename T> struct WINRT_IMPL_EMPTY_BASES IIterable;
    template <typename T> struct WINRT_IMPL_EMPTY_BASES IVectorView;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::GenerativeInternal
{
    enum class ContentSafetySeverityLevelInternal : int32_t
    {
        Minimum_MinToBlock_BackCompat = 0,
        Low_MinToBlock_BackCompat = 1,
        Medium_MinToBlock_BackCompat = 2,
        High_MinToBlock_BackCompat = 3,
        Minimum = 10,
        Low = 11,
        Medium = 12,
        High = 13,
    };
    enum class ImageDescriptionKindInternal : int32_t
    {
        BriefDescription = 0,
        DetailedDescrition = 1,
        DiagramDescription = 2,
        AccessibleDescription = 3,
    };
    enum class ImageDescriptionResultStatusInternal : int32_t
    {
        Complete = 0,
        InProgress = 1,
        BlockedByPolicy = 2,
        ImageBlockedByContentModeration = 3,
        TextInImageBlockedByContentModeration = 4,
        DescriptionTextBlockedByContentModeration = 5,
        ImageHasTooMuchText = 6,
        InternalError = 7,
    };
    enum class LanguageModelSkill : int32_t
    {
        None = 0,
        TextToTable = 1,
        Summarize = 2,
        Rewrite = 3,
        SummarizeParagraph = 4,
        SummarizeConversation = 5,
    };
    struct IImageDescriptionSession;
    struct IImageDescriptionSessionResult;
    struct IImageLLMAdapterSession;
    struct ILanguageModelSession;
    struct ILanguageModelSession2;
    struct ILanguageModelSession3;
    struct ILanguageModelSession4;
    struct ILanguageModelSession5;
    struct ILanguageModelSession6;
    struct ILanguageModelSessionAdapter;
    struct ILanguageModelSessionContext;
    struct ILanguageModelSessionCore;
    struct ILanguageModelSessionCore2;
    struct ITextIntelligenceSession;
    struct ContentFilterOptionsInternal;
    struct LanguageModelInitialContextParam;
    struct LanguageModelOptionsInternal;
    struct TextContentFilterSeverityInternal;
    struct ImageDescriptionSessionContract;
    struct ImageLLMAdapterSessionContract;
    struct LanguageModelSessionContract;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSession>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSessionResult>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageLLMAdapterSession>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession2>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession3>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession4>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession5>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession6>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionAdapter>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore2>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ITextIntelligenceSession>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ContentSafetySeverityLevelInternal>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ImageDescriptionKindInternal>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ImageDescriptionResultStatusInternal>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelSkill>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal>{ using type = struct_category<winrt::Microsoft::Windows::AI::GenerativeInternal::TextContentFilterSeverityInternal, winrt::Microsoft::Windows::AI::GenerativeInternal::TextContentFilterSeverityInternal>; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelInitialContextParam>{ using type = struct_category<hstring, uint32_t>; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal>{ using type = struct_category<uint32_t, float, float, uint32_t>; };
    template <> struct category<winrt::Microsoft::Windows::AI::GenerativeInternal::TextContentFilterSeverityInternal>{ using type = struct_category<winrt::Microsoft::Windows::AI::GenerativeInternal::ContentSafetySeverityLevelInternal, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentSafetySeverityLevelInternal, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentSafetySeverityLevelInternal, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentSafetySeverityLevelInternal>; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ContentSafetySeverityLevelInternal> = L"Microsoft.Windows.AI.GenerativeInternal.ContentSafetySeverityLevelInternal";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ImageDescriptionKindInternal> = L"Microsoft.Windows.AI.GenerativeInternal.ImageDescriptionKindInternal";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ImageDescriptionResultStatusInternal> = L"Microsoft.Windows.AI.GenerativeInternal.ImageDescriptionResultStatusInternal";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelSkill> = L"Microsoft.Windows.AI.GenerativeInternal.LanguageModelSkill";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal> = L"Microsoft.Windows.AI.GenerativeInternal.ContentFilterOptionsInternal";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelInitialContextParam> = L"Microsoft.Windows.AI.GenerativeInternal.LanguageModelInitialContextParam";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal> = L"Microsoft.Windows.AI.GenerativeInternal.LanguageModelOptionsInternal";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::TextContentFilterSeverityInternal> = L"Microsoft.Windows.AI.GenerativeInternal.TextContentFilterSeverityInternal";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSession> = L"Microsoft.Windows.AI.GenerativeInternal.IImageDescriptionSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSessionResult> = L"Microsoft.Windows.AI.GenerativeInternal.IImageDescriptionSessionResult";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageLLMAdapterSession> = L"Microsoft.Windows.AI.GenerativeInternal.IImageLLMAdapterSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession2> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSession2";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession3> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSession3";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession4> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSession4";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession5> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSession5";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession6> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSession6";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionAdapter> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSessionAdapter";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSessionContext";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSessionCore";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore2> = L"Microsoft.Windows.AI.GenerativeInternal.ILanguageModelSessionCore2";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ITextIntelligenceSession> = L"Microsoft.Windows.AI.GenerativeInternal.ITextIntelligenceSession";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ImageDescriptionSessionContract> = L"Microsoft.Windows.AI.GenerativeInternal.ImageDescriptionSessionContract";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ImageLLMAdapterSessionContract> = L"Microsoft.Windows.AI.GenerativeInternal.ImageLLMAdapterSessionContract";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelSessionContract> = L"Microsoft.Windows.AI.GenerativeInternal.LanguageModelSessionContract";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSession>{ 0x79B4F53C,0xD232,0x4FED,{ 0x86,0xA4,0xCF,0xED,0x34,0x01,0xEE,0x2C } }; // 79B4F53C-D232-4FED-86A4-CFED3401EE2C
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSessionResult>{ 0x01240C06,0x4E72,0x48B1,{ 0xAA,0xA4,0xEC,0xF3,0x05,0x21,0x40,0x1A } }; // 01240C06-4E72-48B1-AAA4-ECF30521401A
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageLLMAdapterSession>{ 0x48F51A4A,0xC075,0x443A,{ 0x9F,0x14,0xAA,0x1A,0x24,0x39,0x0F,0x25 } }; // 48F51A4A-C075-443A-9F14-AA1A24390F25
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession>{ 0xE46B6C4F,0x58F1,0x5DC7,{ 0x9B,0xC6,0x0B,0x77,0x3E,0x26,0xDD,0x66 } }; // E46B6C4F-58F1-5DC7-9BC6-0B773E26DD66
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession2>{ 0xD21AE12E,0xA805,0x5689,{ 0x8B,0x11,0xFE,0x8A,0x51,0xF7,0xF6,0x05 } }; // D21AE12E-A805-5689-8B11-FE8A51F7F605
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession3>{ 0x97B315E0,0xEA36,0x5BD6,{ 0xB5,0x56,0xA3,0x0F,0x3A,0x5F,0x5A,0x69 } }; // 97B315E0-EA36-5BD6-B556-A30F3A5F5A69
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession4>{ 0x432AE0D0,0x3B45,0x5DD2,{ 0x99,0x1F,0xC7,0x42,0xD9,0x36,0x34,0xB3 } }; // 432AE0D0-3B45-5DD2-991F-C742D93634B3
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession5>{ 0xE0772254,0xFEC1,0x5D06,{ 0x84,0x07,0xA8,0x85,0x70,0xA6,0xD6,0x55 } }; // E0772254-FEC1-5D06-8407-A88570A6D655
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession6>{ 0x6EF9A188,0x123D,0x56C8,{ 0xA1,0x04,0x43,0x00,0x5E,0xC0,0x19,0xD6 } }; // 6EF9A188-123D-56C8-A104-43005EC019D6
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionAdapter>{ 0x1B24B76D,0x33E7,0x4F78,{ 0x84,0x6A,0x30,0x94,0xCE,0x9C,0x80,0x57 } }; // 1B24B76D-33E7-4F78-846A-3094CE9C8057
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext>{ 0x014382CF,0x858F,0x4338,{ 0x91,0x41,0x3F,0x86,0xBB,0x00,0x59,0x56 } }; // 014382CF-858F-4338-9141-3F86BB005956
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore>{ 0x926B0A0F,0x8F5E,0x41CD,{ 0xAC,0x12,0xB0,0x5A,0xDD,0xB2,0x6E,0x05 } }; // 926B0A0F-8F5E-41CD-AC12-B05ADDB26E05
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore2>{ 0x7D5DC34F,0x1F2D,0x41C0,{ 0xBC,0x08,0x47,0x0D,0x8A,0x40,0x19,0x50 } }; // 7D5DC34F-1F2D-41C0-BC08-470D8A401950
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::GenerativeInternal::ITextIntelligenceSession>{ 0x39B5AE48,0xF70B,0x4709,{ 0x88,0xEB,0x61,0x7F,0xB1,0x36,0xEB,0x2C } }; // 39B5AE48-F70B-4709-88EB-617FB136EB2C
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSession>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall DescribeAsync(void*, int32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall GetPartialResult(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSessionResult>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Description(void**) noexcept = 0;
            virtual int32_t __stdcall get_Status(int32_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageLLMAdapterSession>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetImageLLMEmbeddings(uint32_t, float*, uint32_t, void**) noexcept = 0;
            virtual int32_t __stdcall GetModelInputSize(uint32_t, uint32_t*) noexcept = 0;
            virtual int32_t __stdcall GetModelOutputSize(uint32_t, uint32_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GetContextLength(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall GenerateEmbeddings(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GetTokensAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall get_ModelVersion(void**) noexcept = 0;
            virtual int32_t __stdcall get_VectorSpaceId(winrt::guid*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession2>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall IsPromptLargerThanContext(void*, bool*) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent(void*, winrt::guid, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent2(void*, winrt::guid, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent3(void*, winrt::guid, void**) noexcept = 0;
            virtual int32_t __stdcall GetPartialResult(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession3>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetTokens(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GetEmbeddings(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponse(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, uint32_t, uint32_t, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent2(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent3(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession4>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetEmbeddingSize(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelInitialContextParam, uint32_t, float*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall GetTokens(void*, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall GetEmbeddings(void*, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponse(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent2(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent3(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent4(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void**) noexcept = 0;
            virtual int32_t __stdcall CreateContext(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelInitialContextParam, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall IsPromptLargerThanContext(void*, void*, bool*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession5>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetContextPromptCutoffIndex(void*, uint64_t*) noexcept = 0;
            virtual int32_t __stdcall GetContextPromptCutoffIndex2(void*, void*, uint64_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession6>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseWithProgressEvent(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionAdapter>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetContextLength(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall GetEmbeddingSize(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall get_ModelVersion(void**) noexcept = 0;
            virtual int32_t __stdcall get_VectorSpaceId(winrt::guid*) noexcept = 0;
            virtual int32_t __stdcall GetPartialResult(void**) noexcept = 0;
            virtual int32_t __stdcall GetTokens(void*, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall GetEmbeddingsCore(void*, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelInitialContextParam, uint32_t, float*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent2(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void**) noexcept = 0;
            virtual int32_t __stdcall CreateContext(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelInitialContextParam, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void**) noexcept = 0;
            virtual int32_t __stdcall IsPromptLargerThanContext(void*, void*, bool*) noexcept = 0;
            virtual int32_t __stdcall GetContextPromptCutoffIndex(void*, void*, uint64_t*) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent3(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, uint32_t, void**, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent4(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GetSessionBoundEmbedding(uint32_t, float*, winrt::guid, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore2>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseWithProgressEvent(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, uint32_t, void**, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressEvent2(struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal, void*, winrt::guid, uint32_t, uint32_t, struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal, void*, void*, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::GenerativeInternal::ITextIntelligenceSession>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GetTIContextPromptCutoffIndex(void*, void*, int32_t, void*, uint64_t*) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_IImageDescriptionSession
    {
        auto DescribeAsync(winrt::Microsoft::Windows::PrivateCommon::ImageBufferResource const& imageBufferResource, winrt::Microsoft::Windows::AI::GenerativeInternal::ImageDescriptionKindInternal const& kind, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto GetPartialResult() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSession>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_IImageDescriptionSession<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_IImageDescriptionSessionResult
    {
        [[nodiscard]] auto Description() const;
        [[nodiscard]] auto Status() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageDescriptionSessionResult>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_IImageDescriptionSessionResult<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_IImageLLMAdapterSession
    {
        auto GetImageLLMEmbeddings(array_view<float const> data, uint32_t priority) const;
        auto GetModelInputSize(uint32_t priority) const;
        auto GetModelOutputSize(uint32_t priority) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::IImageLLMAdapterSession>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_IImageLLMAdapterSession<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession
    {
        auto GenerateResponseAsync(param::hstring const& prompt) const;
        auto GetContextLength() const;
        auto GenerateEmbeddings(param::hstring const& prompt) const;
        auto GetTokensAsync(param::hstring const& prompt) const;
        [[nodiscard]] auto ModelVersion() const;
        [[nodiscard]] auto VectorSpaceId() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession2
    {
        auto IsPromptLargerThanContext(param::hstring const& prompt) const;
        auto GenerateResponseWithProgressEvent(param::hstring const& prompt, winrt::guid const& eventToken) const;
        auto GenerateResponseWithProgressEvent(param::vector_view<int64_t> const& promptTokens, winrt::guid const& eventToken) const;
        auto GenerateResponseWithProgressEvent(param::vector_view<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding, winrt::guid const& eventToken) const;
        auto GetPartialResult() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession2>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession2<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession3
    {
        auto GetTokens(param::hstring const& prompt) const;
        auto GetEmbeddings(param::hstring const& prompt) const;
        auto GenerateResponse(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::hstring const& prompt, uint32_t priority, uint32_t frequency) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::hstring const& prompt, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::vector_view<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::vector_view<int64_t> const& promptTokens, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession3>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession3<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession4
    {
        auto GetEmbeddingSize() const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelInitialContextParam const& contextParam, array_view<float const> embedding, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto GetTokens(param::hstring const& prompt, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto GetEmbeddings(param::hstring const& prompt, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto GenerateResponse(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::hstring const& prompt, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::hstring const& prompt, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::vector_view<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::vector_view<int64_t> const& promptTokens, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context) const;
        auto CreateContext(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelInitialContextParam const& contextParam, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto IsPromptLargerThanContext(winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context, param::hstring const& prompt) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession4>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession4<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession5
    {
        auto GetContextPromptCutoffIndex(param::hstring const& prompt) const;
        auto GetContextPromptCutoffIndex(winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context, param::hstring const& prompt) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession5>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession5<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession6
    {
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::iterable<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSession6>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSession6<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSessionAdapter
    {
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionAdapter>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSessionAdapter<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSessionContext
    {
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSessionContext<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSessionCore
    {
        auto GetContextLength() const;
        auto GetEmbeddingSize() const;
        [[nodiscard]] auto ModelVersion() const;
        [[nodiscard]] auto VectorSpaceId() const;
        auto GetPartialResult() const;
        auto GetTokens(param::hstring const& prompt, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto GetEmbeddingsCore(param::hstring const& prompt, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelInitialContextParam const& contextParam, array_view<float const> embedding, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::vector_view<int64_t> const& promptTokens, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context) const;
        auto CreateContext(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelInitialContextParam const& contextParam, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions) const;
        auto IsPromptLargerThanContext(winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context, param::hstring const& prompt) const;
        auto GetContextPromptCutoffIndex(winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context, param::hstring const& prompt) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, array_view<winrt::Microsoft::Windows::AI::FoundationInternal::EmbeddingVector const> promptEmbedding, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::hstring const& prompt, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context, param::hstring const& skillOptions) const;
        auto GetSessionBoundEmbedding(array_view<float const> data, winrt::guid const& vectorSpaceID) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSessionCore<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSessionCore2
    {
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, array_view<winrt::Microsoft::Windows::AI::FoundationInternal::EmbeddingVector const> promptEmbedding, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionAdapter const& adapter) const;
        auto GenerateResponseWithProgressEvent(winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal const& options, param::hstring const& prompt, winrt::guid const& eventToken, uint32_t priority, uint32_t frequency, winrt::Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal const& contentFilterOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context, param::hstring const& skillOptions, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionAdapter const& adapter) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionCore2>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ILanguageModelSessionCore2<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_GenerativeInternal_ITextIntelligenceSession
    {
        auto GetTIContextPromptCutoffIndex(param::hstring const& prompt, winrt::Microsoft::Windows::AI::GenerativeInternal::ILanguageModelSessionContext const& context, winrt::Microsoft::Windows::AI::GenerativeInternal::LanguageModelSkill const& skill, param::hstring const& skillOptions) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::GenerativeInternal::ITextIntelligenceSession>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_GenerativeInternal_ITextIntelligenceSession<D>;
    };
    struct struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal
    {
        struct{ int32_t HateContentSeverity; int32_t SexualContentSeverity; int32_t ViolentContentSeverity; int32_t SelfHarmContentSeverity; } PromptMaxAllowedSeverityLevel;
        struct{ int32_t HateContentSeverity; int32_t SexualContentSeverity; int32_t ViolentContentSeverity; int32_t SelfHarmContentSeverity; } ResponseMaxAllowedSeverityLevel;
    };
    template <> struct abi<Microsoft::Windows::AI::GenerativeInternal::ContentFilterOptionsInternal>
    {
        using type = struct_Microsoft_Windows_AI_GenerativeInternal_ContentFilterOptionsInternal;
    };
    struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelInitialContextParam
    {
        void* SystemPrompt;
        uint32_t RandomGeneratorSeed;
    };
    template <> struct abi<Microsoft::Windows::AI::GenerativeInternal::LanguageModelInitialContextParam>
    {
        using type = struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelInitialContextParam;
    };
    struct struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal
    {
        uint32_t Skill;
        float Temp;
        float Top_p;
        uint32_t Top_k;
    };
    template <> struct abi<Microsoft::Windows::AI::GenerativeInternal::LanguageModelOptionsInternal>
    {
        using type = struct_Microsoft_Windows_AI_GenerativeInternal_LanguageModelOptionsInternal;
    };
    struct struct_Microsoft_Windows_AI_GenerativeInternal_TextContentFilterSeverityInternal
    {
        int32_t HateContentSeverity;
        int32_t SexualContentSeverity;
        int32_t ViolentContentSeverity;
        int32_t SelfHarmContentSeverity;
    };
    template <> struct abi<Microsoft::Windows::AI::GenerativeInternal::TextContentFilterSeverityInternal>
    {
        using type = struct_Microsoft_Windows_AI_GenerativeInternal_TextContentFilterSeverityInternal;
    };
}
#endif
