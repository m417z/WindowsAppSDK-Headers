// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_Windows_Management_Deployment_1_H
#define WINRT_Microsoft_Windows_Management_Deployment_1_H
#include "winrt/impl/Microsoft.Windows.Management.Deployment.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::Management::Deployment
{
    struct __declspec(empty_bases) IAddPackageOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAddPackageOptions>
    {
        IAddPackageOptions(std::nullptr_t = nullptr) noexcept {}
        IAddPackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IAddPackageSetOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAddPackageSetOptions>
    {
        IAddPackageSetOptions(std::nullptr_t = nullptr) noexcept {}
        IAddPackageSetOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IEnsureIsReadyOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IEnsureIsReadyOptions>
    {
        IEnsureIsReadyOptions(std::nullptr_t = nullptr) noexcept {}
        IEnsureIsReadyOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IFindPackageSetOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFindPackageSetOptions>
    {
        IFindPackageSetOptions(std::nullptr_t = nullptr) noexcept {}
        IFindPackageSetOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageDeploymentManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDeploymentManager>
    {
        IPackageDeploymentManager(std::nullptr_t = nullptr) noexcept {}
        IPackageDeploymentManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageDeploymentManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDeploymentManagerStatics>
    {
        IPackageDeploymentManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IPackageDeploymentManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageDeploymentProgress :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDeploymentProgress>
    {
        IPackageDeploymentProgress(std::nullptr_t = nullptr) noexcept {}
        IPackageDeploymentProgress(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageDeploymentResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageDeploymentResult>
    {
        IPackageDeploymentResult(std::nullptr_t = nullptr) noexcept {}
        IPackageDeploymentResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageRuntimeManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageRuntimeManager>
    {
        IPackageRuntimeManager(std::nullptr_t = nullptr) noexcept {}
        IPackageRuntimeManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageRuntimeManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageRuntimeManagerStatics>
    {
        IPackageRuntimeManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IPackageRuntimeManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageSet :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageSet>
    {
        IPackageSet(std::nullptr_t = nullptr) noexcept {}
        IPackageSet(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageSetItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageSetItem>
    {
        IPackageSetItem(std::nullptr_t = nullptr) noexcept {}
        IPackageSetItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageSetItemRuntimeDisposition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageSetItemRuntimeDisposition>
    {
        IPackageSetItemRuntimeDisposition(std::nullptr_t = nullptr) noexcept {}
        IPackageSetItemRuntimeDisposition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageSetManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageSetManager>
    {
        IPackageSetManager(std::nullptr_t = nullptr) noexcept {}
        IPackageSetManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageSetManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageSetManagerStatics>
    {
        IPackageSetManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IPackageSetManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageSetRuntimeDisposition :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageSetRuntimeDisposition>
    {
        IPackageSetRuntimeDisposition(std::nullptr_t = nullptr) noexcept {}
        IPackageSetRuntimeDisposition(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageVolume :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageVolume>
    {
        IPackageVolume(std::nullptr_t = nullptr) noexcept {}
        IPackageVolume(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageVolumeManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageVolumeManagerStatics>
    {
        IPackageVolumeManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IPackageVolumeManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPackageVolumeStatus :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPackageVolumeStatus>
    {
        IPackageVolumeStatus(std::nullptr_t = nullptr) noexcept {}
        IPackageVolumeStatus(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IRegisterPackageOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRegisterPackageOptions>
    {
        IRegisterPackageOptions(std::nullptr_t = nullptr) noexcept {}
        IRegisterPackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IRemovePackageOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRemovePackageOptions>
    {
        IRemovePackageOptions(std::nullptr_t = nullptr) noexcept {}
        IRemovePackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IStagePackageOptions :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStagePackageOptions>
    {
        IStagePackageOptions(std::nullptr_t = nullptr) noexcept {}
        IStagePackageOptions(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
