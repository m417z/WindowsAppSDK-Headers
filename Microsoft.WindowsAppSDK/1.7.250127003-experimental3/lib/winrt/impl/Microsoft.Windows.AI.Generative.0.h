// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_Generative_0_H
#define WINRT_Microsoft_Windows_AI_Generative_0_H
WINRT_EXPORT namespace winrt::Microsoft::Graphics::Imaging
{
    struct ImageBuffer;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::ContentModeration
{
    struct ContentFilterOptions;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::SemanticSearch
{
    struct EmbeddingVector;
}
WINRT_EXPORT namespace winrt::Windows::Foundation::Collections
{
    template <typename T> struct WINRT_IMPL_EMPTY_BASES IVectorView;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::Generative
{
    enum class ImageDescriptionScenario : int32_t
    {
        Accessibility = 1,
        Caption = 2,
        DetailedNarration = 3,
        OfficeCharts = 4,
    };
    enum class LanguageModelResponseStatus : int32_t
    {
        Complete = 0,
        InProgress = 1,
        BlockedByPolicy = 2,
        PromptLargerThanContext = 3,
        PromptBlockedByPolicy = 4,
        ResponseBlockedByPolicy = 5,
    };
    enum class LanguageModelSkill : int32_t
    {
        General = 0,
        TextToTable = 1,
        Summarize = 2,
        Rewrite = 3,
    };
    struct IImageDescriptionGenerator;
    struct IImageDescriptionGenerator2;
    struct IImageDescriptionGenerator3;
    struct IImageDescriptionGeneratorStatics;
    struct ILanguageModel;
    struct ILanguageModel2;
    struct ILanguageModel3;
    struct ILanguageModel4;
    struct ILanguageModel5;
    struct ILanguageModelContext;
    struct ILanguageModelOptions;
    struct ILanguageModelOptionsFactory;
    struct ILanguageModelResponse;
    struct ILanguageModelResponseFactory;
    struct ILanguageModelStatics;
    struct ImageDescriptionGenerator;
    struct LanguageModel;
    struct LanguageModelContext;
    struct LanguageModelOptions;
    struct LanguageModelResponse;
    struct ImageDescriptionContract;
    struct LanguageModelContract;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator2>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator3>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModel>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModel2>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModel3>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModel4>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModel5>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptionsFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponse>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionGenerator>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModel>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelContext>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponse>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionScenario>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponseStatus>{ using type = enum_category; };
    template <> struct category<winrt::Microsoft::Windows::AI::Generative::LanguageModelSkill>{ using type = enum_category; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionGenerator> = L"Microsoft.Windows.AI.Generative.ImageDescriptionGenerator";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModel> = L"Microsoft.Windows.AI.Generative.LanguageModel";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelContext> = L"Microsoft.Windows.AI.Generative.LanguageModelContext";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions> = L"Microsoft.Windows.AI.Generative.LanguageModelOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponse> = L"Microsoft.Windows.AI.Generative.LanguageModelResponse";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionScenario> = L"Microsoft.Windows.AI.Generative.ImageDescriptionScenario";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponseStatus> = L"Microsoft.Windows.AI.Generative.LanguageModelResponseStatus";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelSkill> = L"Microsoft.Windows.AI.Generative.LanguageModelSkill";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator> = L"Microsoft.Windows.AI.Generative.IImageDescriptionGenerator";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator2> = L"Microsoft.Windows.AI.Generative.IImageDescriptionGenerator2";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator3> = L"Microsoft.Windows.AI.Generative.IImageDescriptionGenerator3";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics> = L"Microsoft.Windows.AI.Generative.IImageDescriptionGeneratorStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel> = L"Microsoft.Windows.AI.Generative.ILanguageModel";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel2> = L"Microsoft.Windows.AI.Generative.ILanguageModel2";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel3> = L"Microsoft.Windows.AI.Generative.ILanguageModel3";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel4> = L"Microsoft.Windows.AI.Generative.ILanguageModel4";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel5> = L"Microsoft.Windows.AI.Generative.ILanguageModel5";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext> = L"Microsoft.Windows.AI.Generative.ILanguageModelContext";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions> = L"Microsoft.Windows.AI.Generative.ILanguageModelOptions";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptionsFactory> = L"Microsoft.Windows.AI.Generative.ILanguageModelOptionsFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponse> = L"Microsoft.Windows.AI.Generative.ILanguageModelResponse";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseFactory> = L"Microsoft.Windows.AI.Generative.ILanguageModelResponseFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics> = L"Microsoft.Windows.AI.Generative.ILanguageModelStatics";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionContract> = L"Microsoft.Windows.AI.Generative.ImageDescriptionContract";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::AI::Generative::LanguageModelContract> = L"Microsoft.Windows.AI.Generative.LanguageModelContract";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator>{ 0x201D9382,0xACBD,0x5B77,{ 0x8D,0x54,0x58,0xC6,0x8C,0x73,0x9E,0x9C } }; // 201D9382-ACBD-5B77-8D54-58C68C739E9C
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator2>{ 0x724CE13E,0x014E,0x5C20,{ 0x87,0x3C,0x4D,0x1C,0xDE,0x8C,0x82,0x90 } }; // 724CE13E-014E-5C20-873C-4D1CDE8C8290
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator3>{ 0xD4A3AD04,0x728E,0x5FD9,{ 0x90,0x8E,0xDB,0x32,0xDC,0x0E,0xF4,0x1B } }; // D4A3AD04-728E-5FD9-908E-DB32DC0EF41B
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics>{ 0xFFA3BF30,0xF7B1,0x5EF5,{ 0xA7,0x30,0xFE,0x37,0x59,0xBE,0x09,0xB5 } }; // FFA3BF30-F7B1-5EF5-A730-FE3759BE09B5
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel>{ 0x38B8A444,0x8BA1,0x5409,{ 0xA9,0x16,0xDC,0x1F,0x78,0x51,0xBE,0xA3 } }; // 38B8A444-8BA1-5409-A916-DC1F7851BEA3
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel2>{ 0xCBB284C3,0xD42E,0x5CF5,{ 0xAD,0xA4,0x6B,0xEC,0x6C,0xEC,0x87,0x84 } }; // CBB284C3-D42E-5CF5-ADA4-6BEC6CEC8784
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel3>{ 0xA05361EE,0x3AC3,0x5459,{ 0x9C,0x0C,0xE0,0x8A,0x35,0xA0,0x10,0x32 } }; // A05361EE-3AC3-5459-9C0C-E08A35A01032
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel4>{ 0x0CCAC517,0xE9F4,0x5F5B,{ 0xA4,0x04,0xF1,0x4E,0x56,0x0F,0xCA,0xC1 } }; // 0CCAC517-E9F4-5F5B-A404-F14E560FCAC1
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModel5>{ 0xD9700FC8,0xF41F,0x5C98,{ 0xB3,0x68,0x09,0x62,0x44,0x7E,0xF2,0xCA } }; // D9700FC8-F41F-5C98-B368-0962447EF2CA
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext>{ 0xC8948656,0x8131,0x5F7A,{ 0x81,0xC8,0x28,0x27,0x9B,0xBA,0x0A,0x86 } }; // C8948656-8131-5F7A-81C8-28279BBA0A86
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions>{ 0x32CECA03,0xB0A2,0x56D2,{ 0x92,0xD5,0xF6,0x52,0x70,0xAB,0x76,0x37 } }; // 32CECA03-B0A2-56D2-92D5-F65270AB7637
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptionsFactory>{ 0x5E48AF80,0xF5BB,0x5223,{ 0xB2,0x51,0xFB,0xC8,0x71,0xBE,0xB8,0x48 } }; // 5E48AF80-F5BB-5223-B251-FBC871BEB848
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponse>{ 0x0CC262B4,0xD0F1,0x526E,{ 0x90,0x4E,0xF9,0xDB,0x35,0xC9,0x0D,0x33 } }; // 0CC262B4-D0F1-526E-904E-F9DB35C90D33
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseFactory>{ 0xE271F832,0x9A93,0x5485,{ 0xA7,0x6A,0xEC,0x91,0x33,0x9B,0xEA,0xB2 } }; // E271F832-9A93-5485-A76A-EC91339BEAB2
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics>{ 0x122C5800,0x8823,0x50F6,{ 0x9D,0x94,0x77,0xE4,0xC1,0x9D,0x37,0x21 } }; // 122C5800-8823-50F6-9D94-77E4C19D3721
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::ImageDescriptionGenerator>{ using type = winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModel>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModel; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModelContext>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions; };
    template <> struct default_interface<winrt::Microsoft::Windows::AI::Generative::LanguageModelResponse>{ using type = winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponse; };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall DescribeAsync(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator2>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall DescribeAsync(void*, int32_t, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator3>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall DescribeAsync(void*, int32_t, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall IsAvailable(bool*) noexcept = 0;
            virtual int32_t __stdcall MakeAvailableAsync(void**) noexcept = 0;
            virtual int32_t __stdcall CreateAsync(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModel>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressAsync(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModel2>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseFromEmbeddingsWithProgressAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateEmbeddingVector(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateEmbeddingVectorAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall IsPromptLargerThanContext(void*, bool*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModel3>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseAsync(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromEmbeddingsWithProgressAsync(void*, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModel4>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseWithProgressAsync(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateTokens(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateTokensAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromTokensWithProgressAsync(void*, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModel5>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall GenerateResponseAsync(void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressAsync(void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromEmbeddingsWithProgressAsync(void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromTokensWithProgressAsync(void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseAsync2(void*, void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseWithProgressAsync2(void*, void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromEmbeddingsWithProgressAsync2(void*, void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateResponseFromTokensWithProgressAsync2(void*, void*, void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateEmbeddingVector(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateEmbeddingVectorAsync(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateTokens(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall GenerateTokensAsync(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall CreateContext(void**) noexcept = 0;
            virtual int32_t __stdcall CreateContext2(void*, void*, void**) noexcept = 0;
            virtual int32_t __stdcall IsPromptLargerThanContext(void*, void*, bool*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Skill(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Skill(int32_t) noexcept = 0;
            virtual int32_t __stdcall get_Temp(float*) noexcept = 0;
            virtual int32_t __stdcall put_Temp(float) noexcept = 0;
            virtual int32_t __stdcall get_Top_p(float*) noexcept = 0;
            virtual int32_t __stdcall put_Top_p(float) noexcept = 0;
            virtual int32_t __stdcall get_Top_k(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Top_k(uint32_t) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptionsFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(int32_t, float, float, uint32_t, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponse>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Response(void**) noexcept = 0;
            virtual int32_t __stdcall get_Status(int32_t*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, int32_t, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall IsAvailable(bool*) noexcept = 0;
            virtual int32_t __stdcall MakeAvailableAsync(void**) noexcept = 0;
            virtual int32_t __stdcall CreateAsync(void**) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_IImageDescriptionGenerator
    {
        auto DescribeAsync(winrt::Microsoft::Graphics::Imaging::ImageBuffer const& image) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_IImageDescriptionGenerator<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_IImageDescriptionGenerator2
    {
        auto DescribeAsync(winrt::Microsoft::Graphics::Imaging::ImageBuffer const& image, winrt::Microsoft::Windows::AI::Generative::ImageDescriptionScenario const& scenario) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator2>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_IImageDescriptionGenerator2<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_IImageDescriptionGenerator3
    {
        auto DescribeAsync(winrt::Microsoft::Graphics::Imaging::ImageBuffer const& image, winrt::Microsoft::Windows::AI::Generative::ImageDescriptionScenario const& scenario, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGenerator3>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_IImageDescriptionGenerator3<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_IImageDescriptionGeneratorStatics
    {
        auto IsAvailable() const;
        auto MakeAvailableAsync() const;
        auto CreateAsync() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::IImageDescriptionGeneratorStatics>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_IImageDescriptionGeneratorStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModel
    {
        auto GenerateResponseAsync(param::hstring const& prompt) const;
        auto GenerateResponseWithProgressAsync(param::hstring const& prompt) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModel>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModel<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModel2
    {
        auto GenerateResponseFromEmbeddingsWithProgressAsync(param::async_vector_view<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding) const;
        auto GenerateEmbeddingVector(param::hstring const& prompt) const;
        auto GenerateEmbeddingVectorAsync(param::hstring const& prompt) const;
        auto IsPromptLargerThanContext(param::hstring const& prompt) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModel2>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModel2<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModel3
    {
        auto GenerateResponseAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::hstring const& prompt) const;
        auto GenerateResponseFromEmbeddingsWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::async_vector_view<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModel3>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModel3<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModel4
    {
        auto GenerateResponseWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::hstring const& prompt) const;
        auto GenerateTokens(param::hstring const& text) const;
        auto GenerateTokensAsync(param::hstring const& text) const;
        auto GenerateResponseFromTokensWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::async_vector_view<int64_t> const& promptTokens) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModel4>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModel4<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModel5
    {
        auto GenerateResponseAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::hstring const& prompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto GenerateResponseWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::hstring const& prompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto GenerateResponseFromEmbeddingsWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::async_vector_view<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto GenerateResponseFromTokensWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::async_vector_view<int64_t> const& promptTokens, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto GenerateResponseAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::hstring const& prompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions, winrt::Microsoft::Windows::AI::Generative::LanguageModelContext const& context) const;
        auto GenerateResponseWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::hstring const& prompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions, winrt::Microsoft::Windows::AI::Generative::LanguageModelContext const& context) const;
        auto GenerateResponseFromEmbeddingsWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::async_vector_view<winrt::Microsoft::Windows::SemanticSearch::EmbeddingVector> const& promptEmbedding, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions, winrt::Microsoft::Windows::AI::Generative::LanguageModelContext const& context) const;
        auto GenerateResponseFromTokensWithProgressAsync(winrt::Microsoft::Windows::AI::Generative::LanguageModelOptions const& options, param::async_vector_view<int64_t> const& promptTokens, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions, winrt::Microsoft::Windows::AI::Generative::LanguageModelContext const& context) const;
        auto GenerateEmbeddingVector(param::hstring const& prompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto GenerateEmbeddingVectorAsync(param::hstring const& prompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto GenerateTokens(param::hstring const& text, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto GenerateTokensAsync(param::hstring const& text, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto CreateContext() const;
        auto CreateContext(param::hstring const& systemPrompt, winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions const& contentFilterOptions) const;
        auto IsPromptLargerThanContext(winrt::Microsoft::Windows::AI::Generative::LanguageModelContext const& context, param::hstring const& prompt) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModel5>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModel5<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelContext
    {
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelContext>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelContext<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelOptions
    {
        [[nodiscard]] auto Skill() const;
        auto Skill(winrt::Microsoft::Windows::AI::Generative::LanguageModelSkill const& value) const;
        [[nodiscard]] auto Temp() const;
        auto Temp(float value) const;
        [[nodiscard]] auto Top_p() const;
        auto Top_p(float value) const;
        [[nodiscard]] auto Top_k() const;
        auto Top_k(uint32_t value) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptions>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelOptions<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelOptionsFactory
    {
        auto CreateInstance(winrt::Microsoft::Windows::AI::Generative::LanguageModelSkill const& skill, float temp, float top_p, uint32_t top_k) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelOptionsFactory>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelOptionsFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelResponse
    {
        [[nodiscard]] auto Response() const;
        [[nodiscard]] auto Status() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponse>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelResponse<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelResponseFactory
    {
        auto CreateInstance(param::hstring const& response, winrt::Microsoft::Windows::AI::Generative::LanguageModelResponseStatus const& status) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelResponseFactory>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelResponseFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_AI_Generative_ILanguageModelStatics
    {
        auto IsAvailable() const;
        auto MakeAvailableAsync() const;
        auto CreateAsync() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::AI::Generative::ILanguageModelStatics>
    {
        template <typename D> using type = consume_Microsoft_Windows_AI_Generative_ILanguageModelStatics<D>;
    };
}
#endif
