// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Microsoft_Windows_AI_ContentModeration_H
#define WINRT_Microsoft_Windows_AI_ContentModeration_H
#include "winrt/base.h"
static_assert(winrt::check_version(CPPWINRT_VERSION, "2.0.240405.15"), "Mismatched C++/WinRT headers.");
#define CPPWINRT_VERSION "2.0.240405.15"
#include "winrt/impl/Microsoft.Windows.AI.ContentModeration.2.h"
namespace winrt::impl
{
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IContentFilterOptions<D>::PromptMinSeverityLevelToBlock() const
    {
        void* value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions)->get_PromptMinSeverityLevelToBlock(&value));
        return winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity{ value, take_ownership_from_abi };
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IContentFilterOptions<D>::PromptMinSeverityLevelToBlock(winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions)->put_PromptMinSeverityLevelToBlock(*(void**)(&value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IContentFilterOptions<D>::ResponseMinSeverityLevelToBlock() const
    {
        void* value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions)->get_ResponseMinSeverityLevelToBlock(&value));
        return winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity{ value, take_ownership_from_abi };
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IContentFilterOptions<D>::ResponseMinSeverityLevelToBlock(winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions)->put_ResponseMinSeverityLevelToBlock(*(void**)(&value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IContentFilterOptions<D>::ImageMinSeverityLevelToBlock() const
    {
        void* value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions)->get_ImageMinSeverityLevelToBlock(&value));
        return winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity{ value, take_ownership_from_abi };
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IContentFilterOptions<D>::ImageMinSeverityLevelToBlock(winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions)->put_ImageMinSeverityLevelToBlock(*(void**)(&value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>::AdultContentLevel() const
    {
        winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity)->get_AdultContentLevel(reinterpret_cast<int32_t*>(&value)));
        return value;
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>::AdultContentLevel(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity)->put_AdultContentLevel(static_cast<int32_t>(value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>::RacyContentLevel() const
    {
        winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity)->get_RacyContentLevel(reinterpret_cast<int32_t*>(&value)));
        return value;
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>::RacyContentLevel(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity)->put_RacyContentLevel(static_cast<int32_t>(value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>::GoryContentLevel() const
    {
        winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity)->get_GoryContentLevel(reinterpret_cast<int32_t*>(&value)));
        return value;
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>::GoryContentLevel(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity)->put_GoryContentLevel(static_cast<int32_t>(value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>::ViolentContentLevel() const
    {
        winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity)->get_ViolentContentLevel(reinterpret_cast<int32_t*>(&value)));
        return value;
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverity<D>::ViolentContentLevel(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity)->put_ViolentContentLevel(static_cast<int32_t>(value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_IImageContentFilterSeverityFactory<D>::CreateInstance(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& AdultContentLevel, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& RacyContentLevel, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& GoryContentLevel, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& ViolentContentLevel) const
    {
        void* value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory)->CreateInstance(static_cast<int32_t>(AdultContentLevel), static_cast<int32_t>(RacyContentLevel), static_cast<int32_t>(GoryContentLevel), static_cast<int32_t>(ViolentContentLevel), &value));
        return winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity{ value, take_ownership_from_abi };
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>::HateContentSeverity() const
    {
        winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity)->get_HateContentSeverity(reinterpret_cast<int32_t*>(&value)));
        return value;
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>::HateContentSeverity(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity)->put_HateContentSeverity(static_cast<int32_t>(value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>::SexualContentSeverity() const
    {
        winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity)->get_SexualContentSeverity(reinterpret_cast<int32_t*>(&value)));
        return value;
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>::SexualContentSeverity(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity)->put_SexualContentSeverity(static_cast<int32_t>(value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>::ViolentContentSeverity() const
    {
        winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity)->get_ViolentContentSeverity(reinterpret_cast<int32_t*>(&value)));
        return value;
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>::ViolentContentSeverity(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity)->put_ViolentContentSeverity(static_cast<int32_t>(value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>::SelfHarmContentSeverity() const
    {
        winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity)->get_SelfHarmContentSeverity(reinterpret_cast<int32_t*>(&value)));
        return value;
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverity<D>::SelfHarmContentSeverity(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& value) const
    {
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity)->put_SelfHarmContentSeverity(static_cast<int32_t>(value)));
    }
    template <typename D> auto consume_Microsoft_Windows_AI_ContentModeration_ITextContentFilterSeverityFactory<D>::CreateInstance(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& hateContentSeverity, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& sexualContentSeverity, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& violentContentSeverity, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& selfHarmContentSeverity) const
    {
        void* value{};
        check_hresult(WINRT_IMPL_SHIM(winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory)->CreateInstance(static_cast<int32_t>(hateContentSeverity), static_cast<int32_t>(sexualContentSeverity), static_cast<int32_t>(violentContentSeverity), static_cast<int32_t>(selfHarmContentSeverity), &value));
        return winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity{ value, take_ownership_from_abi };
    }
#ifndef WINRT_LEAN_AND_MEAN
    template <typename D>
    struct produce<D, winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions> : produce_base<D, winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions>
    {
        int32_t __stdcall get_PromptMinSeverityLevelToBlock(void** value) noexcept final try
        {
            clear_abi(value);
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity>(this->shim().PromptMinSeverityLevelToBlock());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_PromptMinSeverityLevelToBlock(void* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().PromptMinSeverityLevelToBlock(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall get_ResponseMinSeverityLevelToBlock(void** value) noexcept final try
        {
            clear_abi(value);
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity>(this->shim().ResponseMinSeverityLevelToBlock());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_ResponseMinSeverityLevelToBlock(void* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().ResponseMinSeverityLevelToBlock(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall get_ImageMinSeverityLevelToBlock(void** value) noexcept final try
        {
            clear_abi(value);
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity>(this->shim().ImageMinSeverityLevelToBlock());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_ImageMinSeverityLevelToBlock(void* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().ImageMinSeverityLevelToBlock(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
    };
#endif
#ifndef WINRT_LEAN_AND_MEAN
    template <typename D>
    struct produce<D, winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity> : produce_base<D, winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity>
    {
        int32_t __stdcall get_AdultContentLevel(int32_t* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>(this->shim().AdultContentLevel());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_AdultContentLevel(int32_t value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().AdultContentLevel(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall get_RacyContentLevel(int32_t* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>(this->shim().RacyContentLevel());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_RacyContentLevel(int32_t value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().RacyContentLevel(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall get_GoryContentLevel(int32_t* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>(this->shim().GoryContentLevel());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_GoryContentLevel(int32_t value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().GoryContentLevel(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall get_ViolentContentLevel(int32_t* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>(this->shim().ViolentContentLevel());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_ViolentContentLevel(int32_t value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().ViolentContentLevel(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
    };
#endif
#ifndef WINRT_LEAN_AND_MEAN
    template <typename D>
    struct produce<D, winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory> : produce_base<D, winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory>
    {
        int32_t __stdcall CreateInstance(int32_t AdultContentLevel, int32_t RacyContentLevel, int32_t GoryContentLevel, int32_t ViolentContentLevel, void** value) noexcept final try
        {
            clear_abi(value);
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity>(this->shim().CreateInstance(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&AdultContentLevel), *reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&RacyContentLevel), *reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&GoryContentLevel), *reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&ViolentContentLevel)));
            return 0;
        }
        catch (...) { return to_hresult(); }
    };
#endif
#ifndef WINRT_LEAN_AND_MEAN
    template <typename D>
    struct produce<D, winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity> : produce_base<D, winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity>
    {
        int32_t __stdcall get_HateContentSeverity(int32_t* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>(this->shim().HateContentSeverity());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_HateContentSeverity(int32_t value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().HateContentSeverity(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall get_SexualContentSeverity(int32_t* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>(this->shim().SexualContentSeverity());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_SexualContentSeverity(int32_t value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().SexualContentSeverity(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall get_ViolentContentSeverity(int32_t* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>(this->shim().ViolentContentSeverity());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_ViolentContentSeverity(int32_t value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().ViolentContentSeverity(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall get_SelfHarmContentSeverity(int32_t* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel>(this->shim().SelfHarmContentSeverity());
            return 0;
        }
        catch (...) { return to_hresult(); }
        int32_t __stdcall put_SelfHarmContentSeverity(int32_t value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().SelfHarmContentSeverity(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&value));
            return 0;
        }
        catch (...) { return to_hresult(); }
    };
#endif
#ifndef WINRT_LEAN_AND_MEAN
    template <typename D>
    struct produce<D, winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory> : produce_base<D, winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory>
    {
        int32_t __stdcall CreateInstance(int32_t hateContentSeverity, int32_t sexualContentSeverity, int32_t violentContentSeverity, int32_t selfHarmContentSeverity, void** value) noexcept final try
        {
            clear_abi(value);
            typename D::abi_guard guard(this->shim());
            *value = detach_from<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity>(this->shim().CreateInstance(*reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&hateContentSeverity), *reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&sexualContentSeverity), *reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&violentContentSeverity), *reinterpret_cast<winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const*>(&selfHarmContentSeverity)));
            return 0;
        }
        catch (...) { return to_hresult(); }
    };
#endif
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::AI::ContentModeration
{
    inline ContentFilterOptions::ContentFilterOptions() :
        ContentFilterOptions(impl::call_factory_cast<ContentFilterOptions(*)(winrt::Windows::Foundation::IActivationFactory const&), ContentFilterOptions>([](winrt::Windows::Foundation::IActivationFactory const& f) { return f.template ActivateInstance<ContentFilterOptions>(); }))
    {
    }
    inline ImageContentFilterSeverity::ImageContentFilterSeverity() :
        ImageContentFilterSeverity(impl::call_factory_cast<ImageContentFilterSeverity(*)(winrt::Windows::Foundation::IActivationFactory const&), ImageContentFilterSeverity>([](winrt::Windows::Foundation::IActivationFactory const& f) { return f.template ActivateInstance<ImageContentFilterSeverity>(); }))
    {
    }
    inline ImageContentFilterSeverity::ImageContentFilterSeverity(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& AdultContentLevel, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& RacyContentLevel, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& GoryContentLevel, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& ViolentContentLevel) :
        ImageContentFilterSeverity(impl::call_factory<ImageContentFilterSeverity, IImageContentFilterSeverityFactory>([&](IImageContentFilterSeverityFactory const& f) { return f.CreateInstance(AdultContentLevel, RacyContentLevel, GoryContentLevel, ViolentContentLevel); }))
    {
    }
    inline TextContentFilterSeverity::TextContentFilterSeverity() :
        TextContentFilterSeverity(impl::call_factory_cast<TextContentFilterSeverity(*)(winrt::Windows::Foundation::IActivationFactory const&), TextContentFilterSeverity>([](winrt::Windows::Foundation::IActivationFactory const& f) { return f.template ActivateInstance<TextContentFilterSeverity>(); }))
    {
    }
    inline TextContentFilterSeverity::TextContentFilterSeverity(winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& hateContentSeverity, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& sexualContentSeverity, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& violentContentSeverity, winrt::Microsoft::Windows::AI::ContentModeration::SeverityLevel const& selfHarmContentSeverity) :
        TextContentFilterSeverity(impl::call_factory<TextContentFilterSeverity, ITextContentFilterSeverityFactory>([&](ITextContentFilterSeverityFactory const& f) { return f.CreateInstance(hateContentSeverity, sexualContentSeverity, violentContentSeverity, selfHarmContentSeverity); }))
    {
    }
}
namespace std
{
#ifndef WINRT_LEAN_AND_MEAN
    template<> struct hash<winrt::Microsoft::Windows::AI::ContentModeration::IContentFilterOptions> : winrt::impl::hash_base {};
    template<> struct hash<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverity> : winrt::impl::hash_base {};
    template<> struct hash<winrt::Microsoft::Windows::AI::ContentModeration::IImageContentFilterSeverityFactory> : winrt::impl::hash_base {};
    template<> struct hash<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverity> : winrt::impl::hash_base {};
    template<> struct hash<winrt::Microsoft::Windows::AI::ContentModeration::ITextContentFilterSeverityFactory> : winrt::impl::hash_base {};
    template<> struct hash<winrt::Microsoft::Windows::AI::ContentModeration::ContentFilterOptions> : winrt::impl::hash_base {};
    template<> struct hash<winrt::Microsoft::Windows::AI::ContentModeration::ImageContentFilterSeverity> : winrt::impl::hash_base {};
    template<> struct hash<winrt::Microsoft::Windows::AI::ContentModeration::TextContentFilterSeverity> : winrt::impl::hash_base {};
#endif
#ifdef __cpp_lib_format
#endif
}
#endif
