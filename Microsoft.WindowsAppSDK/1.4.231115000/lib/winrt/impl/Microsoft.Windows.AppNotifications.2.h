// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_Microsoft_Windows_AppNotifications_2_H
#define WINRT_Microsoft_Windows_AppNotifications_2_H
#include "winrt/impl/Microsoft.Windows.AppNotifications.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::AppNotifications
{
    struct __declspec(empty_bases) AppNotification : winrt::Microsoft::Windows::AppNotifications::IAppNotification
    {
        AppNotification(std::nullptr_t) noexcept {}
        AppNotification(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AppNotifications::IAppNotification(ptr, take_ownership_from_abi) {}
        explicit AppNotification(param::hstring const& payload);
    };
    struct __declspec(empty_bases) AppNotificationActivatedEventArgs : winrt::Microsoft::Windows::AppNotifications::IAppNotificationActivatedEventArgs,
        impl::require<AppNotificationActivatedEventArgs, winrt::Microsoft::Windows::AppNotifications::IAppNotificationActivatedEventArgs2>
    {
        AppNotificationActivatedEventArgs(std::nullptr_t) noexcept {}
        AppNotificationActivatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AppNotifications::IAppNotificationActivatedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) AppNotificationManager : winrt::Microsoft::Windows::AppNotifications::IAppNotificationManager,
        impl::require<AppNotificationManager, winrt::Microsoft::Windows::AppNotifications::IAppNotificationManager2>
    {
        AppNotificationManager(std::nullptr_t) noexcept {}
        AppNotificationManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AppNotifications::IAppNotificationManager(ptr, take_ownership_from_abi) {}
        using winrt::Microsoft::Windows::AppNotifications::IAppNotificationManager::Register;
        using impl::consume_t<AppNotificationManager, winrt::Microsoft::Windows::AppNotifications::IAppNotificationManager2>::Register;
        [[nodiscard]] static auto Default();
        static auto IsSupported();
    };
    struct __declspec(empty_bases) AppNotificationProgressData : winrt::Microsoft::Windows::AppNotifications::IAppNotificationProgressData
    {
        AppNotificationProgressData(std::nullptr_t) noexcept {}
        AppNotificationProgressData(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::AppNotifications::IAppNotificationProgressData(ptr, take_ownership_from_abi) {}
        explicit AppNotificationProgressData(uint32_t sequenceNumber);
    };
}
#endif
